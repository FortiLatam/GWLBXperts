AWSTemplateFormatVersion: 2010-09-09
Description: This template creates a new VPC to deploy the FortiGate Autoscale Solution.
Mappings: 
  RegionMap: 
    us-east-1:
      UVM64: ami-052efd3df9dad4825
    us-east-2:
      UVM64: ami-097a2df4ac947655f

Parameters:
    KeyPairName:
        Type: 'AWS::EC2::KeyPair::KeyName'
        ConstraintDescription: must specify an admin access key pair for FortiGate instances.
        Description: Amazon EC2 Key Pair for admin access.
    S3BucketName:
        Type: String
        AllowedPattern: '^[0-9a-zA-Z]+([0-9a-zA-Z-.]*[0-9a-zA-Z])*$'
        ConstraintDescription: >-
            Deployment resource S3 bucket name can include numbers, lowercase
            letters, uppercase letters, and hyphens (-). It cannot start or end
            with a hyphen (-).
        Description: >-
            Name of the S3 bucket that contains the FortiGate Autoscale
            deployment package. Can only contain numbers, lowercase letters,
            uppercase letters, and hyphens (-). It cannot start or end with a
            hyphen (-).
    S3KeyPrefix:
        Type: String
        AllowedPattern: '^[0-9a-zA-Z-./]*$'
        ConstraintDescription: >-
            Deployment package S3 key prefix can include numbers, lowercase
            letters, uppercase letters, hyphens (-), and forward slash (/).
        Description: >-
            Name of the S3 folder that stores the FortiGate Autoscale deployment
            resources. Can only contain numbers, lowercase letters, uppercase
            letters, hyphens (-), and forward slashes (/). If provided, it must
            end with a forward slash (/).
    AvailabilityZones:
        Description: >-
            The list of Availability Zones to use for the subnets in the VPC.
            The FortiGate Autoscale solution uses two Availability Zones from
            your list and preserves the logical order you specify.
        Type: 'List<AWS::EC2::AvailabilityZone::Name>'
    VpcCidr:
        Type: String
        Default: 10.0.0.0/16
        AllowedPattern: >-
            ^(([0-9]|[1-9][0-9]|1[0-9][0-9]|2[0-4][0-9]|25[0-5])\.){3}([0-9]|[1-9][0-9]|1[0-9][0-9]|2[0-4][0-9]|25[0-5]){1}(\/([0-9]|[1-2][0-9]|3[0-2]))?$
        ConstraintDescription: must be a valid CIDR block format.
        Description: The CIDR block for the new VPC.
    PublicSubnet1Cidr:
        Type: String
        Default: 10.0.0.0/24
        AllowedPattern: >-
            ^(([0-9]|[1-9][0-9]|1[0-9][0-9]|2[0-4][0-9]|25[0-5])\.){3}([0-9]|[1-9][0-9]|1[0-9][0-9]|2[0-4][0-9]|25[0-5]){1}(\/([0-9]|[1-2][0-9]|3[0-2]))?$
        ConstraintDescription: must be a valid CIDR block format.
        Description: >-
            The CIDR block for the public facing subnet located in Availability
            Zone 1.
    PublicSubnet2Cidr:
        Type: String
        Default: 10.0.2.0/24
        AllowedPattern: >-
            ^(([0-9]|[1-9][0-9]|1[0-9][0-9]|2[0-4][0-9]|25[0-5])\.){3}([0-9]|[1-9][0-9]|1[0-9][0-9]|2[0-4][0-9]|25[0-5]){1}(\/([0-9]|[1-2][0-9]|3[0-2]))?$
        ConstraintDescription: must be a valid CIDR block format.
        Description: >-
            The CIDR block for the public facing subnet located in Availability
            Zone 2.
    DeployPrivateSubnet1:
        Type: String
        Default: 'yes'
        AllowedValues:
            - 'yes'
            - 'no'
        ConstraintDescription: must choose from the provided options.
        Description: Will deploy the private subnet 1.
    PrivateSubnet1Cidr:
        Type: String
        Default: 10.0.1.0/24
        AllowedPattern: >-
            ^$|^(([0-9]|[1-9][0-9]|1[0-9][0-9]|2[0-4][0-9]|25[0-5])\.){3}([0-9]|[1-9][0-9]|1[0-9][0-9]|2[0-4][0-9]|25[0-5]){1}(\/([0-9]|[1-2][0-9]|3[0-2]))?$
        ConstraintDescription: must be a valid CIDR block format.
        Description: >-
            The CIDR block for the private subnet located in Availability Zone 1
            where it is protected by the FortiGates in public subnet in the same
            AZ.
    DeployPrivateSubnet2:
        Type: String
        Default: 'yes'
        AllowedValues:
            - 'yes'
            - 'no'
        ConstraintDescription: must choose from the provided options.
        Description: Will deploy the private subnet 2.
    PrivateSubnet2Cidr:
        Type: String
        Default: 10.0.3.0/24
        AllowedPattern: >-
            ^$|^(([0-9]|[1-9][0-9]|1[0-9][0-9]|2[0-4][0-9]|25[0-5])\.){3}([0-9]|[1-9][0-9]|1[0-9][0-9]|2[0-4][0-9]|25[0-5]){1}(\/([0-9]|[1-2][0-9]|3[0-2]))?$
        ConstraintDescription: must be a valid CIDR block format.
        Description: >-
            The CIDR block for the private subnet located in Availability Zone 1
            where it is protected by the FortiGates in public subnet in the same
            AZ.
    GWLBSubnet1Cidr:
        Type: String
        Default: 10.0.4.0/24
        AllowedPattern: >-
            ^$|^(([0-9]|[1-9][0-9]|1[0-9][0-9]|2[0-4][0-9]|25[0-5])\.){3}([0-9]|[1-9][0-9]|1[0-9][0-9]|2[0-4][0-9]|25[0-5]){1}(\/([0-9]|[1-2][0-9]|3[0-2]))?$
        ConstraintDescription: must be a valid CIDR block format.
        Description: >-
            The CIDR block for the GWLBe subnet located in Availability Zone 1.
    GWLBSubnet2Cidr:
        Type: String
        Default: 10.0.5.0/24
        AllowedPattern: >-
            ^$|^(([0-9]|[1-9][0-9]|1[0-9][0-9]|2[0-4][0-9]|25[0-5])\.){3}([0-9]|[1-9][0-9]|1[0-9][0-9]|2[0-4][0-9]|25[0-5]){1}(\/([0-9]|[1-2][0-9]|3[0-2]))?$
        ConstraintDescription: must be a valid CIDR block format.
        Description: >-
            The CIDR block for the GWLBe subnet located in Availability Zone 2.
    TGWSubnet1Cidr:
        Type: String
        Default: 10.0.6.0/24
        AllowedPattern: >-
            ^$|^(([0-9]|[1-9][0-9]|1[0-9][0-9]|2[0-4][0-9]|25[0-5])\.){3}([0-9]|[1-9][0-9]|1[0-9][0-9]|2[0-4][0-9]|25[0-5]){1}(\/([0-9]|[1-2][0-9]|3[0-2]))?$
        ConstraintDescription: must be a valid CIDR block format.
        Description: >-
            The CIDR block for the TGW subnet located in Availability Zone 1.
    TGWSubnet2Cidr:
        Type: String
        Default: 10.0.7.0/24
        AllowedPattern: >-
            ^$|^(([0-9]|[1-9][0-9]|1[0-9][0-9]|2[0-4][0-9]|25[0-5])\.){3}([0-9]|[1-9][0-9]|1[0-9][0-9]|2[0-4][0-9]|25[0-5]){1}(\/([0-9]|[1-2][0-9]|3[0-2]))?$
        ConstraintDescription: must be a valid CIDR block format.
        Description: >-
            The CIDR block for the TGW subnet located in Availability Zone 2.            
    PairWithPrivateSubnet:
        Type: String
        Default: 'no'
        AllowedValues:
            - 'yes'
            - 'no'
        ConstraintDescription: must choose from the provided options.
        Description: >-
            Create one private subnet to pair with the public subnet in the same
            AZ or not.
    ResourceTagPrefix:
        Type: String
        AllowedPattern: '[0-9a-zA-Z@.#-]+'
        MaxLength: 64
        ConstraintDescription: >-
            Resource tag prefix can include numbers, lowercase letters,
            uppercase letters, ampersat(@) , hyphens (-), period (.), and hash
            (#). Max length is 64.
        Description: >-
            A prefix for tag key ResourceGroup on all resources. It's also used
            as the name prefix of all applicable resources. Can only contain
            numbers, lowercase letters, uppercase letters, ampersat(@) , hyphens
            (-), period (.), and hash (#). Max length is 64.

##SPOKE1###
    Spoke1VpcCidr:
        Type: String
        Default: 10.1.0.0/16
        AllowedPattern: >-
            ^(([0-9]|[1-9][0-9]|1[0-9][0-9]|2[0-4][0-9]|25[0-5])\.){3}([0-9]|[1-9][0-9]|1[0-9][0-9]|2[0-4][0-9]|25[0-5]){1}(\/([0-9]|[1-2][0-9]|3[0-2]))?$
        ConstraintDescription: must be a valid CIDR block format.
        Description: The CIDR block for the new Spoke1 VPC.
    Spoke1PublicSubnet1Cidr:
        Type: String
        Default: 10.1.0.0/24
        AllowedPattern: >-
            ^(([0-9]|[1-9][0-9]|1[0-9][0-9]|2[0-4][0-9]|25[0-5])\.){3}([0-9]|[1-9][0-9]|1[0-9][0-9]|2[0-4][0-9]|25[0-5]){1}(\/([0-9]|[1-2][0-9]|3[0-2]))?$
        ConstraintDescription: must be a valid CIDR block format.
        Description: >-
            The CIDR block for the Spoke1 public facing subnet located in Availability
            Zone 1.
    Spoke1PublicSubnet2Cidr:
        Type: String
        Default: 10.1.2.0/24
        AllowedPattern: >-
            ^(([0-9]|[1-9][0-9]|1[0-9][0-9]|2[0-4][0-9]|25[0-5])\.){3}([0-9]|[1-9][0-9]|1[0-9][0-9]|2[0-4][0-9]|25[0-5]){1}(\/([0-9]|[1-2][0-9]|3[0-2]))?$
        ConstraintDescription: must be a valid CIDR block format.
        Description: >-
            The CIDR block for the Spoke1 public facing subnet located in Availability
            Zone 2.
    Spoke1DeployPrivateSubnet1:
        Type: String
        Default: 'yes'
        AllowedValues:
            - 'yes'
            - 'no'
        ConstraintDescription: must choose from the provided options.
        Description: Will deploy the private subnet 1.
    Spoke1PrivateSubnet1Cidr:
        Type: String
        Default: 10.1.1.0/24
        AllowedPattern: >-
            ^$|^(([0-9]|[1-9][0-9]|1[0-9][0-9]|2[0-4][0-9]|25[0-5])\.){3}([0-9]|[1-9][0-9]|1[0-9][0-9]|2[0-4][0-9]|25[0-5]){1}(\/([0-9]|[1-2][0-9]|3[0-2]))?$
        ConstraintDescription: must be a valid CIDR block format.
        Description: >-
            The CIDR block for the Spoke1 private subnet located in Availability Zone 1
            where it is protected by the FortiGates in public subnet in the same
            AZ.
    Spoke1DeployPrivateSubnet2:
        Type: String
        Default: 'yes'
        AllowedValues:
            - 'yes'
            - 'no'
        ConstraintDescription: must choose from the provided options.
        Description: Will deploy the private subnet 2.
    Spoke1PrivateSubnet2Cidr:
        Type: String
        Default: 10.1.3.0/24
        AllowedPattern: >-
            ^$|^(([0-9]|[1-9][0-9]|1[0-9][0-9]|2[0-4][0-9]|25[0-5])\.){3}([0-9]|[1-9][0-9]|1[0-9][0-9]|2[0-4][0-9]|25[0-5]){1}(\/([0-9]|[1-2][0-9]|3[0-2]))?$
        ConstraintDescription: must be a valid CIDR block format.
        Description: >-
            The CIDR block for the Spoke1 private subnet located in Availability Zone 1
            where it is protected by the FortiGates in public subnet in the same
            AZ.
    Spoke1GWLBSubnet1Cidr:
        Type: String
        Default: 10.1.4.0/24
        AllowedPattern: >-
            ^$|^(([0-9]|[1-9][0-9]|1[0-9][0-9]|2[0-4][0-9]|25[0-5])\.){3}([0-9]|[1-9][0-9]|1[0-9][0-9]|2[0-4][0-9]|25[0-5]){1}(\/([0-9]|[1-2][0-9]|3[0-2]))?$
        ConstraintDescription: must be a valid CIDR block format.
        Description: >-
            The CIDR block for the Spoke1 GWLBe subnet located in Availability Zone 1.
    Spoke1GWLBSubnet2Cidr:
        Type: String
        Default: 10.1.5.0/24
        AllowedPattern: >-
            ^$|^(([0-9]|[1-9][0-9]|1[0-9][0-9]|2[0-4][0-9]|25[0-5])\.){3}([0-9]|[1-9][0-9]|1[0-9][0-9]|2[0-4][0-9]|25[0-5]){1}(\/([0-9]|[1-2][0-9]|3[0-2]))?$
        ConstraintDescription: must be a valid CIDR block format.
        Description: >-
            The CIDR block for the Spoke1 GWLBe subnet located in Availability Zone 2.
    
    Spoke1PairWithPrivateSubnet:
        Type: String
        Default: 'no'
        AllowedValues:
            - 'yes'
            - 'no'
        ConstraintDescription: must choose from the provided options.
        Description: >-
            Create one private subnet to pair with the public subnet in the same
            AZ or not.
Conditions:
    NeedPairedPrivateSubnet: !Not
        - !Equals
          - !Ref PairWithPrivateSubnet
          - 'no'
    IfDeployPrivateSubnet1: !Equals
        - !Ref DeployPrivateSubnet1
        - 'yes'
    IfDeployPrivateSubnet2: !Equals
        - !Ref DeployPrivateSubnet2
        - 'yes'
    IfDeployPrivateRouteTable: !Or
        - !Equals
          - !Ref DeployPrivateSubnet1
          - 'yes'
        - !Equals
          - !Ref DeployPrivateSubnet2
          - 'yes'
    IfInUSGovCloud: !Or
        - !Equals
          - !Ref 'AWS::Region'
          - us-gov-east-1
        - !Equals
          - !Ref 'AWS::Region'
          - us-gov-west-1
Resources:
    FgtAsgVpc:
        Type: 'AWS::EC2::VPC'
        Properties:
            CidrBlock: !Ref VpcCidr
            InstanceTenancy: default
            EnableDnsSupport: 'true'
            EnableDnsHostnames: 'true'
            Tags:
                - Key: Name
                  Value: !Join
                      - '-'
                      - - !Ref ResourceTagPrefix
                        - fortigate-autoscale-vpc
                - Key: ResourceGroup
                  Value: !Ref ResourceTagPrefix
    PublicSubnet1:
        Type: 'AWS::EC2::Subnet'
        Properties:
            MapPublicIpOnLaunch: 'true'
            CidrBlock: !Ref PublicSubnet1Cidr
            AvailabilityZone: !Select
                - 0
                - !Ref AvailabilityZones
            VpcId: !Ref FgtAsgVpc
            Tags:
                - Key: Name
                  Value: !Join
                      - '-'
                      - - !Ref ResourceTagPrefix
                        - fortigate-autoscale-vpc-public-subnet#1
                - Key: ResourceGroup
                  Value: !Ref ResourceTagPrefix
    PublicSubnet2:
        Type: 'AWS::EC2::Subnet'
        Properties:
            MapPublicIpOnLaunch: 'true'
            CidrBlock: !Ref PublicSubnet2Cidr
            AvailabilityZone: !Select
                - 1
                - !Ref AvailabilityZones
            VpcId: !Ref FgtAsgVpc
            Tags:
                - Key: Name
                  Value: !Join
                      - '-'
                      - - !Ref ResourceTagPrefix
                        - fortigate-autoscale-vpc-public-subnet#2
                - Key: ResourceGroup
                  Value: !Ref ResourceTagPrefix
    GWLBSubnet1:
        Type: 'AWS::EC2::Subnet'
        Properties:
            CidrBlock: !Ref GWLBSubnet1Cidr
            AvailabilityZone: !Select
                - 0
                - !Ref AvailabilityZones
            VpcId: !Ref FgtAsgVpc
            Tags:
                - Key: Name
                  Value: !Join
                      - '-'
                      - - !Ref ResourceTagPrefix
                        - fortigate-autoscale-vpc-gwlb-subnet#1
                - Key: ResourceGroup
                  Value: !Ref ResourceTagPrefix
    GWLBSubnet2:
        Type: 'AWS::EC2::Subnet'
        Properties:
            CidrBlock: !Ref GWLBSubnet2Cidr
            AvailabilityZone: !Select
                - 1
                - !Ref AvailabilityZones
            VpcId: !Ref FgtAsgVpc
            Tags:
                - Key: Name
                  Value: !Join
                      - '-'
                      - - !Ref ResourceTagPrefix
                        - fortigate-autoscale-vpc-gwlb-subnet#2
                - Key: ResourceGroup
                  Value: !Ref ResourceTagPrefix
    FgtDhcpOptions:
        Type: 'AWS::EC2::DHCPOptions'
        Properties:
            DomainName: ca-central-1.compute.internal
            DomainNameServers:
                - AmazonProvidedDNS
    FgtDhcpOptionsAssoc:
        Type: 'AWS::EC2::VPCDHCPOptionsAssociation'
        Properties:
            VpcId: !Ref FgtAsgVpc
            DhcpOptionsId: !Ref FgtDhcpOptions
    FgtInternetGateway:
        Type: 'AWS::EC2::InternetGateway'
        Properties: {}
    FgtIgwAttachment:
        Type: 'AWS::EC2::VPCGatewayAttachment'
        Properties:
            VpcId: !Ref FgtAsgVpc
            InternetGatewayId: !Ref FgtInternetGateway
    FgtPublicSubnetAcl:
        Type: 'AWS::EC2::NetworkAcl'
        Properties:
            VpcId: !Ref FgtAsgVpc
    FgtPublicSubnet1AclEntry:
        Type: 'AWS::EC2::NetworkAclEntry'
        Properties:
            CidrBlock: 0.0.0.0/0
            Egress: 'true'
            Protocol: '-1'
            RuleAction: allow
            RuleNumber: '100'
            NetworkAclId: !Ref FgtPublicSubnetAcl
        DependsOn:
            - FgtPublicSubnetAcl
    FgtPublicSubnet2AclEntry:
        Type: 'AWS::EC2::NetworkAclEntry'
        Properties:
            CidrBlock: 0.0.0.0/0
            Protocol: '-1'
            RuleAction: allow
            RuleNumber: '100'
            NetworkAclId: !Ref FgtPublicSubnetAcl
        DependsOn:
            - FgtPublicSubnetAcl
    FgtPublicSubnet1AclAssoc:
        Type: 'AWS::EC2::SubnetNetworkAclAssociation'
        Properties:
            NetworkAclId: !Ref FgtPublicSubnetAcl
            SubnetId: !Ref PublicSubnet1
        DependsOn:
            - FgtPublicSubnetAcl
            - PublicSubnet1
    FgtPublicSubnet2AclAssoc:
        Type: 'AWS::EC2::SubnetNetworkAclAssociation'
        Properties:
            NetworkAclId: !Ref FgtPublicSubnetAcl
            SubnetId: !Ref PublicSubnet2
        DependsOn:
            - FgtPublicSubnetAcl
            - PublicSubnet2
    
### Route table FGT Public  ###    
    FgtPublicSubnet1RouteTable:
        Type: 'AWS::EC2::RouteTable'
        Properties:
            VpcId: !Ref FgtAsgVpc
            Tags:
                - Key: Name
                  Value: !Join
                      - '-'
                      - - !Ref ResourceTagPrefix
                        - fortigate-autoscale-vpc-public-route-table-az1
                - Key: ResourceGroup
                  Value: !Ref ResourceTagPrefix
    FgtPublicSubnet1RouteTableAssoc1:
        Type: 'AWS::EC2::SubnetRouteTableAssociation'
        Properties:
            RouteTableId: !Ref FgtPublicSubnet1RouteTable
            SubnetId: !Ref PublicSubnet1
    FgtPublicSubnet1Route1:
        Type: 'AWS::EC2::Route'
        Properties:
            DestinationCidrBlock: 0.0.0.0/0
            RouteTableId: !Ref FgtPublicSubnet1RouteTable
            GatewayId: !Ref FgtInternetGateway
        DependsOn:
#            - FgtIgwAttachment
            - FgtInternetGateway
    FgtPublicSubnet1Route2:
        Type: 'AWS::EC2::Route'
        Properties:
            DestinationCidrBlock: !Ref Spoke1VpcCidr
            RouteTableId: !Ref FgtPublicSubnet1RouteTable
            VpcEndpointId: !Ref EndpointSecGWLB1

    FgtPublicSubnet2RouteTable:
        Type: 'AWS::EC2::RouteTable'
        Properties:
            VpcId: !Ref FgtAsgVpc
            Tags:
                - Key: Name
                  Value: !Join
                      - '-'
                      - - !Ref ResourceTagPrefix
                        - fortigate-autoscale-vpc-public-route-table-az2
                - Key: ResourceGroup
                  Value: !Ref ResourceTagPrefix
    FgtPublicSubnet2RouteTableAssoc1:
        Type: 'AWS::EC2::SubnetRouteTableAssociation'
        Properties:
            RouteTableId: !Ref FgtPublicSubnet2RouteTable
            SubnetId: !Ref PublicSubnet2
    FgtPublicSubnet2Route1:
        Type: 'AWS::EC2::Route'
        Properties:
            DestinationCidrBlock: 0.0.0.0/0
            RouteTableId: !Ref FgtPublicSubnet2RouteTable
            GatewayId: !Ref FgtInternetGateway
        DependsOn:
#            - FgtIgwAttachment
            - FgtInternetGateway
    FgtPublicSubnet2Route2:
        Type: 'AWS::EC2::Route'
        Properties:
            DestinationCidrBlock: !Ref Spoke1VpcCidr
            RouteTableId: !Ref FgtPublicSubnet2RouteTable
            VpcEndpointId: !Ref EndpointSecGWLB2


### END RTB FGT Public ###

    PrivateSubnet1:
        Type: 'AWS::EC2::Subnet'
        Condition: IfDeployPrivateSubnet1
        Properties:
            CidrBlock: !Ref PrivateSubnet1Cidr
            AvailabilityZone: !Select
                - 0
                - !Ref AvailabilityZones
            VpcId: !Ref FgtAsgVpc
            Tags:
                - Key: Name
                  Value: !Join
                      - '-'
                      - - !Ref ResourceTagPrefix
                        - fortigate-autoscale-vpc-private-subnet#1
                - Key: ResourceGroup
                  Value: !Ref ResourceTagPrefix
    PrivateSubnet2:
        Type: 'AWS::EC2::Subnet'
        Condition: IfDeployPrivateSubnet2
        Properties:
            CidrBlock: !Ref PrivateSubnet2Cidr
            AvailabilityZone: !Select
                - 1
                - !Ref AvailabilityZones
            VpcId: !Ref FgtAsgVpc
            Tags:
                - Key: Name
                  Value: !Join
                      - '-'
                      - - !Ref ResourceTagPrefix
                        - fortigate-autoscale-vpc-private-subnet#2
                - Key: ResourceGroup
                  Value: !Ref ResourceTagPrefix
    GWLBSubnet1:
        Type: 'AWS::EC2::Subnet'
 #       Condition: IfDeployPrivateSubnet2
        Properties:
            CidrBlock: !Ref GWLBSubnet1Cidr
            AvailabilityZone: !Select
                - 0
                - !Ref AvailabilityZones
            VpcId: !Ref FgtAsgVpc
            Tags:
                - Key: Name
                  Value: !Join
                      - '-'
                      - - !Ref ResourceTagPrefix
                        - fortigate-autoscale-vpc-gwlb-subnet#1
                - Key: ResourceGroup
                  Value: !Ref ResourceTagPrefix
    GWLBSubnet2:
        Type: 'AWS::EC2::Subnet'
 #       Condition: IfDeployPrivateSubnet2
        Properties:
            CidrBlock: !Ref GWLBSubnet2Cidr
            AvailabilityZone: !Select
                - 1
                - !Ref AvailabilityZones
            VpcId: !Ref FgtAsgVpc
            Tags:
                - Key: Name
                  Value: !Join
                      - '-'
                      - - !Ref ResourceTagPrefix
                        - fortigate-autoscale-vpc-gwlb-subnet#2
                - Key: ResourceGroup
                  Value: !Ref ResourceTagPrefix

    TGWSubnet1:
        Type: 'AWS::EC2::Subnet'
 #       Condition: IfDeployPrivateSubnet2
        Properties:
            CidrBlock: !Ref TGWSubnet1Cidr
            AvailabilityZone: !Select
                - 0
                - !Ref AvailabilityZones
            VpcId: !Ref FgtAsgVpc
            Tags:
                - Key: Name
                  Value: !Join
                      - '-'
                      - - !Ref ResourceTagPrefix
                        - fortigate-autoscale-vpc-tgw-subnet#1
                - Key: ResourceGroup
                  Value: !Ref ResourceTagPrefix

    TGWSubnet2:
        Type: 'AWS::EC2::Subnet'
 #       Condition: IfDeployPrivateSubnet2
        Properties:
            CidrBlock: !Ref TGWSubnet2Cidr
            AvailabilityZone: !Select
                - 1
                - !Ref AvailabilityZones
            VpcId: !Ref FgtAsgVpc
            Tags:
                - Key: Name
                  Value: !Join
                      - '-'
                      - - !Ref ResourceTagPrefix
                        - fortigate-autoscale-vpc-tgw-subnet#2
                - Key: ResourceGroup
                  Value: !Ref ResourceTagPrefix

###RTB FGT TGW Subnet 1###
    FgtTGWSubnet1RouteTable:
        Type: 'AWS::EC2::RouteTable'
        Properties:
            VpcId: !Ref FgtAsgVpc
            Tags:
                - Key: Name
                  Value: !Join
                      - '-'
                      - - !Ref ResourceTagPrefix
                        - fortigate-autoscale-vpc-tgw1-route-table
                - Key: ResourceGroup
                  Value: !Ref ResourceTagPrefix
    FgtTGWSubnet1RouteTableAssoc:
        Type: 'AWS::EC2::SubnetRouteTableAssociation'
        Properties:
            RouteTableId: !Ref FgtTGWSubnet1RouteTable
            SubnetId: !Ref TGWSubnet1
    FgtTGWSubnet1Route1:
        Type: 'AWS::EC2::Route'
        Properties:
            DestinationCidrBlock: 0.0.0.0/0
            RouteTableId: !Ref FgtTGWSubnet1RouteTable
            VpcEndpointId: !Ref EndpointSecGWLB1
###END RTB FGT TGW Subnet 1###

###RTB FGT TGW Subnet 2###
    FgtTGWSubnet2RouteTable:
        Type: 'AWS::EC2::RouteTable'
        Properties:
            VpcId: !Ref FgtAsgVpc
            Tags:
                - Key: Name
                  Value: !Join
                      - '-'
                      - - !Ref ResourceTagPrefix
                        - fortigate-autoscale-vpc-tgw2-route-table
                - Key: ResourceGroup
                  Value: !Ref ResourceTagPrefix
    FgtTGWSubnet2RouteTableAssoc:
        Type: 'AWS::EC2::SubnetRouteTableAssociation'
        Properties:
            RouteTableId: !Ref FgtTGWSubnet2RouteTable
            SubnetId: !Ref TGWSubnet2
    FgtTGWSubnet2Route1:
        Type: 'AWS::EC2::Route'
        Properties:
            DestinationCidrBlock: 0.0.0.0/0
            RouteTableId: !Ref FgtTGWSubnet2RouteTable
            VpcEndpointId: !Ref EndpointSecGWLB2
###END RTB FGT TGW Subnet 1###

###RTB FGT Private Subnet###
    FgtPrivateSubnetRouteTable:
        Type: 'AWS::EC2::RouteTable'
        Condition: IfDeployPrivateRouteTable
        Properties:
            VpcId: !Ref FgtAsgVpc
            Tags:
                - Key: Name
                  Value: !Join
                      - '-'
                      - - !Ref ResourceTagPrefix
                        - fortigate-autoscale-vpc-private-route-table
                - Key: ResourceGroup
                  Value: !Ref ResourceTagPrefix
    FgtPrivateSubnet1RouteTableAssoc:
        Type: 'AWS::EC2::SubnetRouteTableAssociation'
        Condition: IfDeployPrivateSubnet1
        Properties:
            RouteTableId: !Ref FgtPrivateSubnetRouteTable
            SubnetId: !Ref PrivateSubnet1
    FgtPrivateSubnet2RouteTableAssoc:
        Type: 'AWS::EC2::SubnetRouteTableAssociation'
        Condition: IfDeployPrivateSubnet2
        Properties:
            RouteTableId: !Ref FgtPrivateSubnetRouteTable
            SubnetId: !Ref PrivateSubnet2

            
###END RTB FGT Private Subnet###

###RTB FGT GWLB Subnet###
    FgtGWLBSubnetRouteTable1:
        Type: 'AWS::EC2::RouteTable'
#        Condition: IfDeployGWLBRouteTable
        Properties:
            VpcId: !Ref FgtAsgVpc
            Tags:
                - Key: Name
                  Value: !Join
                      - '-'
                      - - !Ref ResourceTagPrefix
                        - fortigate-autoscale-vpc-gwlb-route-table-az1
                - Key: ResourceGroup
                  Value: !Ref ResourceTagPrefix
    FgtGWLBSubnet1RouteTableAssoc:
        Type: 'AWS::EC2::SubnetRouteTableAssociation'
#        Condition: IfDeployGWLBSubnet1
        Properties:
            RouteTableId: !Ref FgtGWLBSubnetRouteTable1
            SubnetId: !Ref GWLBSubnet1
    FgtGWLBSubnet1Route1:
        Type: 'AWS::EC2::Route'
        Properties:
            DestinationCidrBlock: !Ref Spoke1VpcCidr
            RouteTableId: !Ref FgtGWLBSubnetRouteTable1
            TransitGatewayId: !Ref TransitGateway
        DependsOn:
            - TransitGateway
            - TransitGatewayAttachmentFgtVPC
            - TransitGatewayAttachmentSpoke1VPC
    FgtGWLBSubnet1Route2:
        Type: 'AWS::EC2::Route'
        Properties:
            DestinationCidrBlock: 0.0.0.0/0
            RouteTableId: !Ref FgtGWLBSubnetRouteTable1
            NatGatewayId: !Ref NATGatewaySecAz1
        DependsOn:
            - NATGatewaySecAz1

    FgtGWLBSubnetRouteTable2:
        Type: 'AWS::EC2::RouteTable'
#        Condition: IfDeployGWLBRouteTable
        Properties:
            VpcId: !Ref FgtAsgVpc
            Tags:
                - Key: Name
                  Value: !Join
                      - '-'
                      - - !Ref ResourceTagPrefix
                        - fortigate-autoscale-vpc-gwlb-route-table-az2
                - Key: ResourceGroup
                  Value: !Ref ResourceTagPrefix
    FgtGWLBSubnet2RouteTableAssoc:
        Type: 'AWS::EC2::SubnetRouteTableAssociation'
#        Condition: IfDeployGWLBSubnet1
        Properties:
            RouteTableId: !Ref FgtGWLBSubnetRouteTable2
            SubnetId: !Ref GWLBSubnet2
    FgtGWLBSubnet2Route1:
        Type: 'AWS::EC2::Route'
        Properties:
            DestinationCidrBlock: !Ref Spoke1VpcCidr
            RouteTableId: !Ref FgtGWLBSubnetRouteTable2
            TransitGatewayId: !Ref TransitGateway
        DependsOn:
            - TransitGateway
            - TransitGatewayAttachmentFgtVPC
            - TransitGatewayAttachmentSpoke1VPC
    FgtGWLBSubnet2Route2:
        Type: 'AWS::EC2::Route'
        Properties:
            DestinationCidrBlock: 0.0.0.0/0
            RouteTableId: !Ref FgtGWLBSubnetRouteTable2
            NatGatewayId: !Ref NATGatewaySecAz2
        DependsOn:
            - NATGatewaySecAz2
###END RTB FGT GWLB Subnet###

    NATGatewaySecAz1:
        Type: AWS::EC2::NatGateway
        Properties:
            AllocationId: !GetAtt NATGatewaySecAz1EIP.AllocationId
            SubnetId: !Ref PublicSubnet1
            Tags:
            - Key: Name
              Value: !Join
                   - '-'
                   - - !Ref ResourceTagPrefix
                     - fortigate-autoscale-vpc-natgwaz1
    NATGatewaySecAz1EIP:
        Type: AWS::EC2::EIP
        Properties:
            Domain: vpc

    NATGatewaySecAz2:
        Type: AWS::EC2::NatGateway
        Properties:
            AllocationId: !GetAtt NATGatewaySecAz2EIP.AllocationId
            SubnetId: !Ref PublicSubnet2
            Tags:
            - Key: Name
              Value: !Join
                   - '-'
                   - - !Ref ResourceTagPrefix
                     - fortigate-autoscale-vpc-natgwaz2
    NATGatewaySecAz2EIP:
        Type: AWS::EC2::EIP
        Properties:
            Domain: vpc


####SPOKE1####
    Spoke1Vpc: 
        Type: 'AWS::EC2::VPC'
        Properties:
            CidrBlock: !Ref Spoke1VpcCidr
            InstanceTenancy: default
            EnableDnsSupport: 'true'
            EnableDnsHostnames: 'true'
            Tags:
                - Key: Name
                  Value: !Join
                      - '-'
                      - - !Ref ResourceTagPrefix
                        - spoke1-vpc
                - Key: ResourceGroup
                  Value: !Ref ResourceTagPrefix
    Spoke1PublicSubnet1:
        Type: 'AWS::EC2::Subnet'
        Properties:
            MapPublicIpOnLaunch: 'true'
            CidrBlock: !Ref Spoke1PublicSubnet1Cidr
            AvailabilityZone: !Select
                - 0
                - !Ref AvailabilityZones
            VpcId: !Ref Spoke1Vpc
            Tags:
                - Key: Name
                  Value: !Join
                      - '-'
                      - - !Ref ResourceTagPrefix
                        - spoke1-vpc-public-subnet#1
                - Key: ResourceGroup
                  Value: !Ref ResourceTagPrefix
    Spoke1PublicSubnet2:
        Type: 'AWS::EC2::Subnet'
        Properties:
            MapPublicIpOnLaunch: 'true'
            CidrBlock: !Ref Spoke1PublicSubnet2Cidr
            AvailabilityZone: !Select
                - 1
                - !Ref AvailabilityZones
            VpcId: !Ref Spoke1Vpc
            Tags:
                - Key: Name
                  Value: !Join
                      - '-'
                      - - !Ref ResourceTagPrefix
                        - spoke1-vpc-public-subnet#2
                - Key: ResourceGroup
                  Value: !Ref ResourceTagPrefix
    Spoke1GWLBSubnet1:
        Type: 'AWS::EC2::Subnet'
        Properties:
            CidrBlock: !Ref Spoke1GWLBSubnet1Cidr
            AvailabilityZone: !Select
                - 0
                - !Ref AvailabilityZones
            VpcId: !Ref Spoke1Vpc
            Tags:
                - Key: Name
                  Value: !Join
                      - '-'
                      - - !Ref ResourceTagPrefix
                        - spoke1-vpc-gwlb-subnet#1
                - Key: ResourceGroup
                  Value: !Ref ResourceTagPrefix
    Spoke1GWLBSubnet2:
        Type: 'AWS::EC2::Subnet'
        Properties:
            CidrBlock: !Ref Spoke1GWLBSubnet2Cidr
            AvailabilityZone: !Select
                - 1
                - !Ref AvailabilityZones
            VpcId: !Ref Spoke1Vpc
            Tags:
                - Key: Name
                  Value: !Join
                      - '-'
                      - - !Ref ResourceTagPrefix
                        - spoke1-vpc-gwlb-subnet#2
                - Key: ResourceGroup
                  Value: !Ref ResourceTagPrefix




#    FgtDhcpOptions:
#        Type: 'AWS::EC2::DHCPOptions'
#        Properties:
#            DomainName: ca-central-1.compute.internal
#            DomainNameServers:
#                - AmazonProvidedDNS
#    FgtDhcpOptionsAssoc:
#        Type: 'AWS::EC2::VPCDHCPOptionsAssociation'
#        Properties:
#            VpcId: !Ref Spoke1Vpc
#            DhcpOptionsId: !Ref FgtDhcpOptions
    Spoke1InternetGateway:
        Type: 'AWS::EC2::InternetGateway'
        Properties: {}
    Spoke1IgwAttachment:
        Type: 'AWS::EC2::VPCGatewayAttachment'
        Properties:
            VpcId: !Ref Spoke1Vpc
            InternetGatewayId: !Ref Spoke1InternetGateway
    Spoke1PublicSubnetAcl:
        Type: 'AWS::EC2::NetworkAcl'
        Properties:
            VpcId: !Ref Spoke1Vpc
    Spoke1PublicSubnet1AclEntry:
        Type: 'AWS::EC2::NetworkAclEntry'
        Properties:
            CidrBlock: 0.0.0.0/0
            Egress: 'true'
            Protocol: '-1'
            RuleAction: allow
            RuleNumber: '100'
            NetworkAclId: !Ref Spoke1PublicSubnetAcl
        DependsOn:
            - Spoke1PublicSubnetAcl
    Spoke1PublicSubnet2AclEntry:
        Type: 'AWS::EC2::NetworkAclEntry'
        Properties:
            CidrBlock: 0.0.0.0/0
            Protocol: '-1'
            RuleAction: allow
            RuleNumber: '100'
            NetworkAclId: !Ref Spoke1PublicSubnetAcl
        DependsOn:
            - Spoke1PublicSubnetAcl
    Spoke1PublicSubnet1AclAssoc:
        Type: 'AWS::EC2::SubnetNetworkAclAssociation'
        Properties:
            NetworkAclId: !Ref Spoke1PublicSubnetAcl
            SubnetId: !Ref Spoke1PublicSubnet1
        DependsOn:
            - Spoke1PublicSubnetAcl
            - Spoke1PublicSubnet1
    Spoke1PublicSubnet2AclAssoc:
        Type: 'AWS::EC2::SubnetNetworkAclAssociation'
        Properties:
            NetworkAclId: !Ref Spoke1PublicSubnetAcl
            SubnetId: !Ref Spoke1PublicSubnet2
        DependsOn:
            - Spoke1PublicSubnetAcl
            - Spoke1PublicSubnet2

#### RTB SPOKE1 Public Subnets ####
    Spoke1PublicSubnetRouteTable:
        Type: 'AWS::EC2::RouteTable'
        Properties:
            VpcId: !Ref Spoke1Vpc
            Tags:
                - Key: Name
                  Value: !Join
                      - '-'
                      - - !Ref ResourceTagPrefix
                        - spoke1-vpc-public-route-table
                - Key: ResourceGroup
                  Value: !Ref ResourceTagPrefix
    Spoke1PublicSubnet1RouteTableAssoc:
        Type: 'AWS::EC2::SubnetRouteTableAssociation'
        Properties:
            RouteTableId: !Ref Spoke1PublicSubnetRouteTable
            SubnetId: !Ref Spoke1PublicSubnet1
##    Spoke1PublicSubnet2RouteTableAssoc:
##        Type: 'AWS::EC2::SubnetRouteTableAssociation'
##        Properties:
##            RouteTableId: !Ref Spoke1PublicSubnetRouteTable
##            SubnetId: !Ref Spoke1PublicSubnet2
    Spoke1PublicSubnetRoute1:
        Type: 'AWS::EC2::Route'
        Properties:
            DestinationCidrBlock: 0.0.0.0/0
            RouteTableId: !Ref Spoke1PublicSubnetRouteTable
#            VpcEndpointId: !Ref Endpoint1SecSpoke
            GatewayId: !Ref Spoke1InternetGateway
        DependsOn:
            - Spoke1IgwAttachment

    Spoke1PublicSubnetRoute2:
        Type: 'AWS::EC2::Route'
        Properties:
            DestinationCidrBlock: !Ref Spoke1PublicSubnet2Cidr
            RouteTableId: !Ref Spoke1PublicSubnetRouteTable
            VpcEndpointId: !Ref Endpoint1SecSpoke
    Spoke1PublicSubnetRoute3:
        Type: 'AWS::EC2::Route'
        Properties:
            DestinationCidrBlock: !Ref VpcCidr
            RouteTableId: !Ref Spoke1PublicSubnetRouteTable
            TransitGatewayId: !Ref TransitGateway
        DependsOn:
            - TransitGateway
            - TransitGatewayAttachmentFgtVPC
            - TransitGatewayAttachmentSpoke1VPC
    Spoke1PublicSubnetRoute4:
        Type: 'AWS::EC2::Route'
        Properties:
            DestinationCidrBlock: !Ref Spoke1PrivateSubnet1Cidr
            RouteTableId: !Ref Spoke1PublicSubnetRouteTable
            VpcEndpointId: !Ref Endpoint1SecSpoke
    Spoke1PublicSubnetRoute5:
        Type: 'AWS::EC2::Route'
        Properties:
            DestinationCidrBlock: !Ref Spoke1PrivateSubnet2Cidr
            RouteTableId: !Ref Spoke1PublicSubnetRouteTable
            VpcEndpointId: !Ref Endpoint1SecSpoke


    Spoke1PublicSubnet2RouteTable:
        Type: 'AWS::EC2::RouteTable'
        Properties:
            VpcId: !Ref Spoke1Vpc
            Tags:
                - Key: Name
                  Value: !Join
                      - '-'
                      - - !Ref ResourceTagPrefix
                        - spoke1-vpc-public2-route-table
                - Key: ResourceGroup
                  Value: !Ref ResourceTagPrefix

    Spoke1PublicSubnet2RouteTableAssoc:
        Type: 'AWS::EC2::SubnetRouteTableAssociation'
        Properties:
            RouteTableId: !Ref Spoke1PublicSubnet2RouteTable
            SubnetId: !Ref Spoke1PublicSubnet2
    Spoke1PublicSubnet2Route1:
        Type: 'AWS::EC2::Route'
        Properties:
            DestinationCidrBlock: 0.0.0.0/0
            RouteTableId: !Ref Spoke1PublicSubnet2RouteTable
            VpcEndpointId: !Ref Endpoint2SecSpoke

    Spoke1PublicSubnet2Route2:
        Type: 'AWS::EC2::Route'
        Properties:
            DestinationCidrBlock: !Ref Spoke1PublicSubnet1Cidr
            RouteTableId: !Ref Spoke1PublicSubnet2RouteTable
            VpcEndpointId: !Ref Endpoint2SecSpoke

    Spoke1PublicSubnet2Route3:
        Type: 'AWS::EC2::Route'
        Properties:
            DestinationCidrBlock: !Ref VpcCidr
            RouteTableId: !Ref Spoke1PublicSubnet2RouteTable
            TransitGatewayId: !Ref TransitGateway
        DependsOn:
            - TransitGateway
            - TransitGatewayAttachmentFgtVPC
            - TransitGatewayAttachmentSpoke1VPC
    Spoke1PublicSubnet2Route4:
        Type: 'AWS::EC2::Route'
        Properties:
            DestinationCidrBlock: !Ref Spoke1PrivateSubnet1Cidr
            RouteTableId: !Ref Spoke1PublicSubnet2RouteTable
            VpcEndpointId: !Ref Endpoint2SecSpoke
    Spoke1PublicSubnet2Route5:
        Type: 'AWS::EC2::Route'
        Properties:
            DestinationCidrBlock: !Ref Spoke1PrivateSubnet2Cidr
            RouteTableId: !Ref Spoke1PublicSubnet2RouteTable
            VpcEndpointId: !Ref Endpoint2SecSpoke


####END RTB SPOKE1 Private Subnets ####
    Spoke1PrivateSubnet1:
        Type: 'AWS::EC2::Subnet'
##        Condition: IfDeployPrivateSubnet1
        Properties:
            CidrBlock: !Ref Spoke1PrivateSubnet1Cidr
            AvailabilityZone: !Select
                - 0
                - !Ref AvailabilityZones
            VpcId: !Ref Spoke1Vpc
            Tags:
                - Key: Name
                  Value: !Join
                      - '-'
                      - - !Ref ResourceTagPrefix
                        - spoke1-vpc-private-subnet#1
                - Key: ResourceGroup
                  Value: !Ref ResourceTagPrefix
    Spoke1PrivateSubnet2:
        Type: 'AWS::EC2::Subnet'
##        Condition: IfDeployPrivateSubnet2
        Properties:
            CidrBlock: !Ref Spoke1PrivateSubnet2Cidr
            AvailabilityZone: !Select
                - 1
                - !Ref AvailabilityZones
            VpcId: !Ref Spoke1Vpc
            Tags:
                - Key: Name
                  Value: !Join
                      - '-'
                      - - !Ref ResourceTagPrefix
                        - spoke1-vpc-private-subnet#2
                - Key: ResourceGroup
                  Value: !Ref ResourceTagPrefix
    Spoke1PrivateSubnetRouteTable:
        Type: 'AWS::EC2::RouteTable'
#        Condition: IfDeployPrivateRouteTable
        Properties:
            VpcId: !Ref Spoke1Vpc
            Tags:
                - Key: Name
                  Value: !Join
                      - '-'
                      - - !Ref ResourceTagPrefix
                        - spoke1-vpc-private-route-table
                - Key: ResourceGroup
                  Value: !Ref ResourceTagPrefix
    Spoke1PrivateSubnet1RouteTableAssoc:
        Type: 'AWS::EC2::SubnetRouteTableAssociation'
 #       Condition: IfDeployPrivateSubnet1
        Properties:
            RouteTableId: !Ref Spoke1PrivateSubnetRouteTable
            SubnetId: !Ref Spoke1PrivateSubnet1
##    Spoke1PrivateSubnet2RouteTableAssoc:
##        Type: 'AWS::EC2::SubnetRouteTableAssociation'
#        Condition: IfDeployPrivateSubnet2
##        Properties:
##            RouteTableId: !Ref Spoke1PrivateSubnetRouteTable
 ##           SubnetId: !Ref Spoke1PrivateSubnet2
    Spoke1PrivateSubnetRoute1:
        Type: 'AWS::EC2::Route'
        Properties:
            DestinationCidrBlock: 0.0.0.0/0
            RouteTableId: !Ref Spoke1PrivateSubnetRouteTable
            TransitGatewayId: !Ref TransitGateway
        DependsOn:
            - TransitGateway
            - TransitGatewayAttachmentFgtVPC
            - TransitGatewayAttachmentSpoke1VPC

#    Spoke1PrivateSubnetRoute2:
#        Type: 'AWS::EC2::Route'
#        Properties:
#            DestinationCidrBlock: 10.0.0.0/8
#            RouteTableId: !Ref Spoke1PrivateSubnetRouteTable
#            TransitGatewayId: !Ref TransitGateway
#        DependsOn:
#            - TransitGateway
#            - TransitGatewayAttachmentFgtVPC
#            - TransitGatewayAttachmentSpoke1VPC


    Spoke1PrivateSubnetRoute3:
        Type: 'AWS::EC2::Route'
        Properties:
            DestinationCidrBlock: !Ref Spoke1PublicSubnet1Cidr
            RouteTableId: !Ref Spoke1PrivateSubnetRouteTable
            VpcEndpointId: !Ref Endpoint1SecSpoke


    Spoke1PrivateSubnetRoute4:
        Type: 'AWS::EC2::Route'
        Properties:
            DestinationCidrBlock: !Ref Spoke1PublicSubnet2Cidr
            RouteTableId: !Ref Spoke1PrivateSubnetRouteTable
            VpcEndpointId: !Ref Endpoint1SecSpoke
    Spoke1PrivateSubnetRoute5:
        Type: 'AWS::EC2::Route'
        Properties:
            DestinationCidrBlock: !Ref Spoke1PrivateSubnet2Cidr
            RouteTableId: !Ref Spoke1PrivateSubnetRouteTable
            VpcEndpointId: !Ref Endpoint1SecSpoke


    Spoke1PrivateSubnet2RouteTable:
        Type: 'AWS::EC2::RouteTable'
#        Condition: IfDeployPrivateRouteTable
        Properties:
            VpcId: !Ref Spoke1Vpc
            Tags:
                - Key: Name
                  Value: !Join
                      - '-'
                      - - !Ref ResourceTagPrefix
                        - spoke1-vpc-private2-route-table
                - Key: ResourceGroup
                  Value: !Ref ResourceTagPrefix

    Spoke1PrivateSubnet2RouteTableAssoc:
        Type: 'AWS::EC2::SubnetRouteTableAssociation'
#        Condition: IfDeployPrivateSubnet2
        Properties:
            RouteTableId: !Ref Spoke1PrivateSubnet2RouteTable
            SubnetId: !Ref Spoke1PrivateSubnet2
    Spoke1PrivateSubnet2Route1:
        Type: 'AWS::EC2::Route'
        Properties:
            DestinationCidrBlock: 0.0.0.0/0
            RouteTableId: !Ref Spoke1PrivateSubnet2RouteTable
            TransitGatewayId: !Ref TransitGateway
        DependsOn:
            - TransitGateway
            - TransitGatewayAttachmentFgtVPC
            - TransitGatewayAttachmentSpoke1VPC

#    Spoke1PrivateSubnet2Route2:
#        Type: 'AWS::EC2::Route'
#        Properties:
#            DestinationCidrBlock: 10.0.0.0/8
#            RouteTableId: !Ref Spoke1PrivateSubnet2RouteTable
#            TransitGatewayId: !Ref TransitGateway
#        DependsOn:
#            - TransitGateway
#            - TransitGatewayAttachmentFgtVPC
#            - TransitGatewayAttachmentSpoke1VPC

    Spoke1PrivateSubnet2Route3:
        Type: 'AWS::EC2::Route'
        Properties:
            DestinationCidrBlock: !Ref Spoke1PublicSubnet1Cidr
            RouteTableId: !Ref Spoke1PrivateSubnet2RouteTable
            VpcEndpointId: !Ref Endpoint2SecSpoke


    Spoke1PrivateSubnet2Route4:
        Type: 'AWS::EC2::Route'
        Properties:
            DestinationCidrBlock: !Ref Spoke1PublicSubnet2Cidr
            RouteTableId: !Ref Spoke1PrivateSubnet2RouteTable
            VpcEndpointId: !Ref Endpoint2SecSpoke
    Spoke1PrivateSubnet2Route5:
        Type: 'AWS::EC2::Route'
        Properties:
            DestinationCidrBlock: !Ref Spoke1PrivateSubnet1Cidr
            RouteTableId: !Ref Spoke1PrivateSubnet2RouteTable
            VpcEndpointId: !Ref Endpoint2SecSpoke


#Spoke1GWLBSubnet1
    Spoke1GWLBSubnetRouteTable:
        Type: 'AWS::EC2::RouteTable'
#        Condition: IfDeployPrivateRouteTable
        Properties:
            VpcId: !Ref Spoke1Vpc
            Tags:
                - Key: Name
                  Value: !Join
                      - '-'
                      - - !Ref ResourceTagPrefix
                        - spoke1-vpc-gwlb-route-table
                - Key: ResourceGroup
                  Value: !Ref ResourceTagPrefix
    Spoke1GWLBSubnet1RouteTableAssoc:
        Type: 'AWS::EC2::SubnetRouteTableAssociation'
 #       Condition: IfDeployGWLBSubnet1
        Properties:
            RouteTableId: !Ref Spoke1GWLBSubnetRouteTable
            SubnetId: !Ref Spoke1GWLBSubnet1
    Spoke1GWLBSubnet2RouteTableAssoc:
        Type: 'AWS::EC2::SubnetRouteTableAssociation'
#        Condition: IfDeployGWLBSubnet2
        Properties:
            RouteTableId: !Ref Spoke1GWLBSubnetRouteTable
            SubnetId: !Ref Spoke1GWLBSubnet2
    Spoke1GWLBSubnetRoute1:
        Type: 'AWS::EC2::Route'
        Properties:
            DestinationCidrBlock: 0.0.0.0/0
            RouteTableId: !Ref Spoke1GWLBSubnetRouteTable
            GatewayId: !Ref Spoke1InternetGateway
    Spoke1GWLBSubnetRoute2:
        Type: 'AWS::EC2::Route'
        Properties:
            DestinationCidrBlock: !Ref VpcCidr
            RouteTableId: !Ref Spoke1GWLBSubnetRouteTable
            TransitGatewayId: !Ref TransitGateway
        DependsOn:
            - TransitGateway
            - TransitGatewayAttachmentFgtVPC
            - TransitGatewayAttachmentSpoke1VPC


#Spoke1IGWRouteTable
    Spoke1IGWRouteTable:
        Type: 'AWS::EC2::RouteTable'
#        Condition: IfDeployPrivateRouteTable
        Properties:
            VpcId: !Ref Spoke1Vpc
            Tags:
                - Key: Name
                  Value: !Join
                      - '-'
                      - - !Ref ResourceTagPrefix
                        - spoke1-vpc-igw-route-table
                - Key: ResourceGroup
                  Value: !Ref ResourceTagPrefix
    Spoke1IGWRouteTableAssoc:
        Type: 'AWS::EC2::GatewayRouteTableAssociation'
 #       Condition: IfDeployGWLBSubnet1
        Properties:
            RouteTableId: !Ref Spoke1IGWRouteTable
            GatewayId: !Ref Spoke1InternetGateway
## Commented because of Xperts lab
#    Spoke1IGWRoute1:
#        Type: 'AWS::EC2::Route'
#        Properties:
#            DestinationCidrBlock: !Ref Spoke1PublicSubnet1Cidr
#            RouteTableId: !Ref Spoke1IGWRouteTable
#            VpcEndpointId: !Ref Endpoint1SecSpoke

    Spoke1IGWRoute2:
        Type: 'AWS::EC2::Route'
        Properties:
            DestinationCidrBlock: !Ref Spoke1PublicSubnet2Cidr
            RouteTableId: !Ref Spoke1IGWRouteTable
            VpcEndpointId: !Ref Endpoint2SecSpoke

    Spoke1IGWRoute3:
        Type: 'AWS::EC2::Route'
        Properties:
            DestinationCidrBlock: !Ref Spoke1PrivateSubnet1Cidr
            RouteTableId: !Ref Spoke1IGWRouteTable
            VpcEndpointId: !Ref Endpoint1SecSpoke

    Spoke1IGWRoute4:
        Type: 'AWS::EC2::Route'
        Properties:
            DestinationCidrBlock: !Ref Spoke1PrivateSubnet2Cidr
            RouteTableId: !Ref Spoke1IGWRouteTable
            VpcEndpointId: !Ref Endpoint2SecSpoke

#### GWLB ####
    GatewayLoadBalancer:
        Type: AWS::ElasticLoadBalancingV2::LoadBalancer
        Properties:
            Name: GWLB-SEC
            Type: gateway
            LoadBalancerAttributes:
                - Key: load_balancing.cross_zone.enabled
                  Value: 'true'
            Subnets:
                - !Ref PrivateSubnet1
                - !Ref PrivateSubnet2

    TargetGroupGeneve:
        Type: AWS::ElasticLoadBalancingV2::TargetGroup
        Properties: 
            Name: GWLB-SEC
            VpcId: !Ref FgtAsgVpc
            TargetType: instance
            Port: 6081
            HealthCheckProtocol: TCP
            Protocol: GENEVE

    ListenerGWLB:
        Type: AWS::ElasticLoadBalancingV2::Listener
        Properties:
            DefaultActions:
                - Type: forward
                  TargetGroupArn: !Ref TargetGroupGeneve
            LoadBalancerArn: !Ref GatewayLoadBalancer

    
    # Creation of Endpoints and Endpoint Service

    EndpointService:
        Type: AWS::EC2::VPCEndpointService
        Properties: 
            AcceptanceRequired: false
            GatewayLoadBalancerArns: 
                - !Ref GatewayLoadBalancer

    EndpointSecGWLB1:
        Type: AWS::EC2::VPCEndpoint
        Properties:
            ServiceName: !Join [".", [com.amazonaws.vpce, !Ref AWS::Region, !Ref EndpointService]]
            VpcEndpointType: GatewayLoadBalancer
            SubnetIds:
              - !Ref GWLBSubnet1
            VpcId: !Ref FgtAsgVpc

    EndpointSecGWLB2:
        Type: AWS::EC2::VPCEndpoint
        Properties:
            ServiceName: !Join [".", [com.amazonaws.vpce, !Ref AWS::Region, !Ref EndpointService]]
            VpcEndpointType: GatewayLoadBalancer
            SubnetIds:
                - !Ref GWLBSubnet2
                #- !Ref PrivateSubnet2
            VpcId: !Ref FgtAsgVpc

#    EndpointLambda:
#        Type: AWS::EC2::VPCEndpoint
#        Properties:
#            ServiceName: !Join [".", [com.amazonaws, !Ref AWS::Region, execute-api]]
#            PrivateDnsEnabled: true
#            SecurityGroupIds: 
#                - !GetAtt SGSecurity.GroupId
#            SubnetIds: 
#                - !Ref SubnetSecPriv1
#                - !Ref SubnetSecPriv2
#            VpcEndpointType: Interface
#            VpcId: !Ref VPCSecurity

#### Changed to Endpoint1SecSpoke
    Endpoint1SecSpoke:
        Type: AWS::EC2::VPCEndpoint
        Properties:
            ServiceName: !Join [".", [com.amazonaws.vpce, !Ref AWS::Region, !Ref EndpointService]]
            VpcEndpointType: GatewayLoadBalancer
            SubnetIds:
                - !Ref Spoke1GWLBSubnet1
            VpcId: !Ref Spoke1Vpc
####Changed
    Endpoint2SecSpoke:
        Type: AWS::EC2::VPCEndpoint
        Properties:
            ServiceName: !Join [".", [com.amazonaws.vpce, !Ref AWS::Region, !Ref EndpointService]]
            VpcEndpointType: GatewayLoadBalancer
            SubnetIds:
                - !Ref Spoke1GWLBSubnet2
            VpcId: !Ref Spoke1Vpc

#### END GWLB ####

#### Create TGW ####
    TransitGateway:
        Type: 'AWS::EC2::TransitGateway'
        Properties: 
            #AmazonSideAsn: "64512"
            #AssociationDefaultRouteTableId: String
            AutoAcceptSharedAttachments: disable
            DefaultRouteTableAssociation: disable
            DefaultRouteTablePropagation: disable
            #Description: "Transit Gateway created in FortiGate GWLB deployment"
            DnsSupport: enable
            #MulticastSupport: String
            #PropagationDefaultRouteTableId: String
            Tags:
                - Key: Name
                  Value: !Join
                      - '-'
                      - - !Ref ResourceTagPrefix
                        - transit-gateway
            #TransitGatewayCidrBlocks: 
            #    - String
            VpnEcmpSupport: enable

    
    TransitGatewayRouteTableSecurity:
        Type: 'AWS::EC2::TransitGatewayRouteTable'
        Properties:
            TransitGatewayId: !Ref TransitGateway
            Tags:
                - Key: Name
                  Value: !Join
                      - '-'
                      - - !Ref ResourceTagPrefix
                        - transit-gateway-route-table-security

    TransitGatewayRouteTableSpoke:
        Type: 'AWS::EC2::TransitGatewayRouteTable'
        Properties:
            TransitGatewayId: !Ref TransitGateway
            Tags:
                - Key: Name
                  Value: !Join
                      - '-'
                      - - !Ref ResourceTagPrefix
                        - transit-gateway-route-table-spoke

    
#    TransitGatewayAttachmentFgtVPC:
#        Type: 'AWS::EC2::TransitGatewayAttachment'
#        Properties:
#            #TransitGatewayId: !If
#             #   - IfCreateTransitGateway
#            TransitGatewayId:
#                - !Ref TransitGateway
#                - !Ref TransitGatewayId
#            VpcId: !Ref FgtAsgVpc
#            SubnetIds:
#                - !Ref TGWSubnet1
#                - !Ref TGWSubnet2
#            Tags:
#                - Key: Name
#                  Value: !Join
#                      - '-'
#                      - - !Ref ResourceTagPrefix
#                        - transit-gateway-attachment-fortigate-vpc
#                - Key: ResourceGroup
#                  Value: !Ref ResourceTagPrefix
    
    TransitGatewayAttachmentFgtVPC:
        Type: 'AWS::EC2::TransitGatewayVpcAttachment'
        Properties: 
            #AddSubnetIds: 
            #    - !Ref TGWSubnet1
            #    - !Ref TGWSubnet2
            #Options: Json
            Options:
                ApplianceModeSupport: enable
            #RemoveSubnetIds: 
            #    - String
            SubnetIds: 
                - !Ref TGWSubnet1
                - !Ref TGWSubnet2
            #Tags: 
            #    - Tag
            TransitGatewayId: !Ref TransitGateway
                #- !Ref TransitGatewayId
            VpcId: !Ref FgtAsgVpc


    TransitGatewayAssociationFgtAsgVPC:
        Type: 'AWS::EC2::TransitGatewayRouteTableAssociation'
        Properties:
            TransitGatewayAttachmentId: !Ref TransitGatewayAttachmentFgtVPC
            TransitGatewayRouteTableId: !Ref TransitGatewayRouteTableSecurity
    
    TransitGatewayPropagationFgtAsgVPC:
        Type: AWS::EC2::TransitGatewayRouteTablePropagation
        Properties: 
            TransitGatewayAttachmentId: !Ref TransitGatewayAttachmentFgtVPC
            TransitGatewayRouteTableId: !Ref TransitGatewayRouteTableSpoke

    TransitGatewayDefaultRoute:
        Type: AWS::EC2::TransitGatewayRoute
        Properties: 
            DestinationCidrBlock: "0.0.0.0/0"
            TransitGatewayAttachmentId: !Ref TransitGatewayAttachmentFgtVPC
            TransitGatewayRouteTableId: !Ref TransitGatewayRouteTableSpoke

    TransitGatewayAttachmentSpoke1VPC:
        Type: AWS::EC2::TransitGatewayVpcAttachment
        Properties: 
            #RemoveSubnetIds: 
            #    - String
            SubnetIds: 
                - !Ref Spoke1PrivateSubnet1
                - !Ref Spoke1PrivateSubnet2
            #Tags: 
            #    - Tag
            TransitGatewayId: !Ref TransitGateway
                #- !Ref TransitGatewayId
            VpcId: !Ref Spoke1Vpc

    TransitGatewayAssociationSpoke1VPC:
        Type: 'AWS::EC2::TransitGatewayRouteTableAssociation'
        Properties:
            TransitGatewayAttachmentId: !Ref TransitGatewayAttachmentSpoke1VPC
            TransitGatewayRouteTableId: !Ref TransitGatewayRouteTableSpoke
    
    TransitGatewayPropagationSpoke1VPC:
        Type: AWS::EC2::TransitGatewayRouteTablePropagation
        Properties: 
            TransitGatewayAttachmentId: !Ref TransitGatewayAttachmentSpoke1VPC
            TransitGatewayRouteTableId: !Ref TransitGatewayRouteTableSecurity

#### Remote Desktop ####
    SGRemoteDesktop:
        Type: AWS::EC2::SecurityGroup
        Properties:
            VpcId: !Ref Spoke1Vpc
            GroupDescription: Security Group for Remote Desktop
            GroupName: Security Group for Remote Desktop
            SecurityGroupIngress:
            #  - IpProtocol: -1
            #    FromPort: -1
            #    ToPort: -1
            #    CidrIp: 0.0.0.0/0
              - IpProtocol: tcp
                FromPort: 3389
                ToPort: 3389
                CidrIp: 0.0.0.0/0
              - IpProtocol: tcp
                FromPort: 9001
                ToPort: 9001
                CidrIp: 0.0.0.0/0
              - IpProtocol: tcp
                FromPort: 8000
                ToPort: 8000
                CidrIp: 0.0.0.0/0
              - IpProtocol: tcp
                FromPort: 1389
                ToPort: 1389
                CidrIp: 0.0.0.0/0
            SecurityGroupEgress:
              - IpProtocol: -1
                FromPort: -1
                ToPort: -1
                CidrIp: 0.0.0.0/0


    EC2RemoteDesktop:
        Type: AWS::EC2::Instance
        Properties:
            # us-east-1 Ubuntu
            ImageId: !FindInMap [RegionMap, !Ref "AWS::Region", UVM64]
            # us-east-2 Ubuntu
            #ImageId: ami-097a2df4ac947655f
            InstanceType: t3.medium            
            KeyName: !Ref KeyPairName
            #KeyName:
            #  Fn::GetAtt: 
            #  - NestedStackA
            #  - Outputs.SharedValueOutput
            NetworkInterfaces:
              - AssociatePublicIpAddress: true
                DeviceIndex: 0
                GroupSet:
                  - !GetAtt SGRemoteDesktop.GroupId
                DeleteOnTermination: true
                SubnetId: !Ref Spoke1PublicSubnet1
            UserData:
              Fn::Base64: !Sub |
                 #!/bin/bash
                 sudo apt update -y
                 sudo DEBIAN_FRONTEND=noninteractive apt-get install -y docker.io git pip
                 sudo useradd -s /bin/bash -m -p "$y$j9T$bmx00ZfxMDzyZMb6Sy25u1$jI4bEqewOqH88OSWmlu1ILUDoPnqY31T8NLeyczh088" student
                 sudo git clone https://github.com/FortiLatam/log4j-shell-poc.git 
                 cd log4j-shell-poc
                 sudo wget https://eventco2022.s3.amazonaws.com/jdk-8u20-linux-x64.tar.gz
                 sudo tar -xzf jdk-8u20-linux-x64.tar.gz
                 cd /
                 sudo mv log4j-shell-poc/ /home/student/
                 sudo pip install -r /home/student/log4j-shell-poc/requirements.txt  
                 sudo chown -R student:student /home/student
                 sudo DEBIAN_FRONTEND=noninteractive apt install gnome-session gdm3 -y
                 sudo DEBIAN_FRONTEND=noninteractive apt install xrdp firefox -y
                 sudo reboot
            Tags:
                - Key: Name
                  Value: "Remote Desktop"



### Lambda ENI FGT
    LambdaExecutionRole:
        Type: AWS::IAM::Role
        Properties:
          AssumeRolePolicyDocument:
            Version: 2012-10-17
            Statement:
              - Effect: Allow
                Principal:
                  Service:
                    - lambda.amazonaws.com
                Action:
                  - sts:AssumeRole
          Path: /
          Policies:
            - PolicyName: root
              PolicyDocument:
                Version: 2012-10-17
                Statement:
                  - Effect: Allow
                    Action:
                      - ec2:DescribeNetworkInterfaces
                      - ec2:DescribeAddresses
                    Resource: "*"
                  - Effect: Allow
                    Action:
                      - s3:PutObject
                    Resource: !Sub
                                - >-
                                    arn:aws${GovCloudSuffix}:s3:::${S3BucketName}/*
                                - GovCloudSuffix: !If
                                      - IfInUSGovCloud
                                      - '-us-gov'
                                      - ''
                                  S3BucketName: !Ref S3BucketName


    CreateBaseconfig:
        Type: AWS::Lambda::Function
        DependsOn: GatewayLoadBalancer
        Properties:
            Handler: index.lambda_handler
            Runtime: python3.9
            Timeout: 30
            Role: !GetAtt
                - LambdaExecutionRole
                - Arn
            Code:
                ZipFile: |
                  import cfnresponse
                  import logging
                  import random
                  import boto3

                  # Init of the logging module
                  logging.basicConfig(level=logging.INFO, format='%(asctime)s - %(name)s - %(levelname)s - %(message)s')
                  def lambda_handler(event, context):
                    if event.get('RequestType') == 'Create':
                        props = event['ResourceProperties']
                        client = boto3.client('ec2')
                        s3 = boto3.client('s3')
                        tmpfile_name = "/tmp/local_file_baseconfig"
                        s3_bucket = props['S3BucketName']
                        s3_folder = props['S3KeyPrefix']
                        file_s3 = "assets/configset/baseconfig"

                        response = client.describe_network_interfaces(Filters=[{'Name': 'description','Values': ['*GWLB*']}])

                        gwlb_ip_1=response['NetworkInterfaces'][0]['PrivateIpAddresses'][0]['PrivateIpAddress']
                        gwlb_ip_2=response['NetworkInterfaces'][1]['PrivateIpAddresses'][0]['PrivateIpAddress']

                        with open(tmpfile_name, 'w') as f:
                            f.write('''config system dns
                            unset primary
                            unset secondary
                            end

                            config system automation-stitch
                                edit "update ha"
                                    set trigger "HA"
                                    config actions
                                        edit 1
                                            set action "update ips"
                                            set delay 90
                                            set required enable
                                        next
                                    end
                                next
                            end

                            config system auto-scale
                                set status enable
                                set sync-interface "{SYNC_INTERFACE}"
                                set hb-interval "{HEART_BEAT_INTERVAL}"
                                # set role command has changed the options since FOS 7.0.1 The 'command fail' errors can be safely ignored if you see them.
                                # options master and slave are only available before FOS 7.0.1
                                set role master
                                # options primary and secondary are only available since FOS 7.0.1
                                set role primary
                                set callback-url "{CALLBACK_URL}"
                                set psksecret "{PSK_SECRET}"
                            end

                            config system interface
                            edit "port1"
                            set vdom "root"
                            set mode dhcp
                            set allowaccess ping https ssh http fgfm
                            set type physical
                            set mtu-override enable
                            set mtu 9001
                            next
                            end

                            config system geneve
                            edit "gwlb1-az1"
                            set interface "port1"
                            set type ppp
                            set remote-ip ''' + gwlb_ip_1 + '''
                            next
                            edit "gwlb1-az2"
                            set interface "port1"
                            set type ppp
                            set remote-ip ''' + gwlb_ip_2 + '''
                            next
                            end

                            config system zone
                            edit "gwlb1-tunnels"
                            set interface "gwlb1-az1" "gwlb1-az2"
                            next
                            end

                            config router static
                            edit 0
                            set distance 5
                            set priority 100
                            set device "gwlb1-az1"
                            next
                            edit 0
                            set distance 5
                            set priority 100
                            set device "gwlb1-az2"
                            next
                            edit 4
                            set dst 10.0.0.0 255.0.0.0
                            set device "port2"
                            set dynamic-gateway enable
                            next
                            end
                            end

                            config router policy
                            edit 1
                            set input-device "gwlb1-az1"
                            set dst "10.0.0.0/255.0.0.0" "172.16.0.0/255.255.240.0" "192.168.0.0/255.255.0.0"
                            set output-device "gwlb1-az1"
                            next
                            edit 2
                            set input-device "gwlb1-az2"
                            set dst "10.0.0.0/255.0.0.0" "172.16.0.0/255.255.240.0" "192.168.0.0/255.255.0.0"
                            set output-device "gwlb1-az2"
                            next
                            edit 3
                            set input-device "gwlb1-az1"
                            set dst "0.0.0.0/0.0.0.0"
                            set output-device "gwlb1-az1"
                            next
                            edit 4
                            set input-device "gwlb1-az2"
                            set dst "0.0.0.0/0.0.0.0"
                            set output-device "gwlb1-az2"
                            next
                            end



                            config firewall address
                            edit "10.0.0.0/8"
                            set subnet 10.0.0.0 255.0.0.0
                            next
                            edit "172.16.0.0/20"
                            set subnet 172.16.0.0 255.255.240.0
                            next
                            edit "192.168.0.0/16"
                            set subnet 192.168.0.0 255.255.0.0
                            next
                            end

                            config firewall addrgrp
                            edit "rfc-1918-subnets"
                            set member "10.0.0.0/8" "172.16.0.0/20" "192.168.0.0/16"
                            next
                            end

                            config firewall policy
                            edit 1
                            set name "ingress"
                            set srcintf "gwlb1-tunnels"
                            set dstintf "gwlb1-tunnels"
                            set srcaddr "all"
                            set dstaddr "rfc-1918-subnets"
                            set action accept
                            set schedule "always"
                            set service "ALL"
                            set logtraffic all
                            set utm-status enable
                            set ips-sensor "all_default_pass"
                            set ssl-ssh-profile "certificate-inspection"
                            set application-list "default"
                            next
                            edit 2
                            set name "east-west"
                            set srcintf "gwlb1-tunnels"
                            set dstintf "gwlb1-tunnels"
                            set srcaddr "rfc-1918-subnets"
                            set dstaddr "rfc-1918-subnets"
                            set action accept
                            set schedule "always"
                            set service "ALL"
                            set logtraffic all
                            next
                            edit 3
                            set name "egress"
                            set srcintf "gwlb1-tunnels"
                            set dstintf "gwlb1-tunnels"
                            set srcaddr "rfc-1918-subnets"
                            set dstaddr "all"
                            set action accept
                            set schedule "always"
                            set service "ALL"
                            set logtraffic all
                            next
                            end

                            config system global
                                set admin-sport "{ADMIN_PORT}"
                                set admintimeout 50
                            end

                            execute update-ips
                            execute update-now''')
                            f.close()

                        with open(tmpfile_name, "rb") as f:
                            s3.upload_fileobj(f, s3_bucket, s3_folder + file_s3)
                            f.close()
                                
                        
                        responseData = {}
                        responseData['message'] = "Lambda Created"
                        logging.info('Sending %s to cloudformation', responseData['message'])
                        cfnresponse.send(event, context, cfnresponse.SUCCESS, responseData)
                    elif event.get('RequestType') == 'Delete':
                        responseData = {}
                        responseData['message'] = "Lambda Deleted"
                        logging.info('Sending %s to cloudformation', responseData['message'])
                        cfnresponse.send(event, context, cfnresponse.SUCCESS, responseData)
                    else:
                        logging.error('Unknown operation: %s', event.get('RequestType'))
            

    ApplyBaseConfig:
        DependsOn: CreateBaseconfig
        Type: Custom::ApplyBaseConfig
        Properties:
            ServiceToken: !GetAtt CreateBaseconfig.Arn
            S3BucketName: !Ref S3BucketName
            S3KeyPrefix: !Ref S3KeyPrefix


Metadata:
    'AWS::CloudFormation::Interface':
        ParameterGroups:
            - Label:
                  default: Test configuration
              Parameters:
                  - KeyPairName 
        ParameterLabels:
            S3BucketName:
                default: S3 bucket name
            S3KeyPrefix:
                default: S3 resource folder
            KeyPairName:
                default: Key pair name

Outputs:
    VpcId:
        Description: VPC ID
        Value: !Ref FgtAsgVpc
    VpcCidr:
        Description: VPC CIDR
        Value: !Ref VpcCidr
    PublicSubnet1Id:
        Description: Public Subnet 1 ID
        Value: !Ref PublicSubnet1
    PublicSubnet2Id:
        Description: Public Subnet 2 ID
        Value: !Ref PublicSubnet2
    GWLBSubnet1Id:
        Description: GWLB Subnet 1 ID
        Value: !Ref GWLBSubnet1
    GWLBSubnet2Id:
        Description: GWLB Subnet 2 ID
        Value: !Ref GWLBSubnet2
    PublicSubnetRouteTableId:
        Description: Public Subnet Route Table ID
        Value: !Ref FgtPublicSubnet1RouteTable
    PrivateSubnet1Id:
        Description: Private Subnet 1 ID
        Value: !If
            - IfDeployPrivateSubnet1
            - !Ref PrivateSubnet1
            - ''
    PrivateSubnet2Id:
        Description: Private Subnet 2 ID
        Value: !If
            - IfDeployPrivateSubnet2
            - !Ref PrivateSubnet2
            - ''
    PrivateSubnetRouteTableId:
        Description: Private subnet route table.
        Value: !If
            - IfDeployPrivateRouteTable
            - !Ref FgtPrivateSubnetRouteTable
            - ''
###SPOKE1###
    Spoke1VpcId:
        Description: SPOKE1 VPC ID
        Value: !Ref Spoke1Vpc
    Spoke1VpcCidr:
        Description: SPOKE1 VPC CIDR
        Value: !Ref Spoke1VpcCidr
    Spoke1PublicSubnet1Id:
        Description: Spoke1 Public Subnet 1 ID
        Value: !Ref Spoke1PublicSubnet1
    Spoke1PublicSubnet2Id:
        Description: Spoke1 Public Subnet 2 ID
        Value: !Ref Spoke1PublicSubnet2
    Spoke1GWLBSubnet1Id:
        Description: Spoke1 GWLB Subnet 1 ID
        Value: !Ref Spoke1GWLBSubnet1
    Spoke1GWLBSubnet2Id:
        Description: Spoke1 GWLB Subnet 2 ID
        Value: !Ref Spoke1GWLBSubnet2
    Spoke1PublicSubnetRouteTableId:
        Description: Spoke1 Public Subnet Route Table ID
        Value: !Ref Spoke1PublicSubnetRouteTable
    Spoke1PrivateSubnet1Id:
        Description: Spoke1 Private Subnet 1 ID
        Value: !Ref Spoke1PrivateSubnet1
    Spoke1PrivateSubnet2Id:
        Description: Private Subnet 2 ID
        Value: !Ref PrivateSubnet2
    Spoke1PrivateSubnetRouteTableId:
        Description: Spoke1 Private subnet route table.
        Value: !Ref Spoke1PrivateSubnetRouteTable
    TargetGroupGeneveId:
        Description: TargetGroupGeneve ID
        Value: !Ref TargetGroupGeneve
#    GWLBEndpointAZ1:
#        Description: IP for GWLB Endpoint AZ1
#        Value: EndpointSecGWLB1
#    GWLBEndpointAZ2:
#        Description: IP for GWLB Endpoint AZ2
#        Value: EndpointSecGWLB2

#    TransitGatewayId:
#        Description: Transit Gateway ID
#        Value: 
#            #- IfCreateTransitGateway
#            - !Ref TransitGateway
#            #- !Ref TransitGatewayId
