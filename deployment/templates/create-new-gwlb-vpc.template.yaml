AWSTemplateFormatVersion: 2010-09-09
Description: This template creates a new VPC to deploy the FortiGate Autoscale Solution.
Parameters:
    AvailabilityZones:
        Description: >-
            The list of Availability Zones to use for the subnets in the VPC.
            The FortiGate Autoscale solution uses two Availability Zones from
            your list and preserves the logical order you specify.
        Type: 'List<AWS::EC2::AvailabilityZone::Name>'
    VpcCidr:
        Type: String
        Default: 10.0.0.0/16
        AllowedPattern: >-
            ^(([0-9]|[1-9][0-9]|1[0-9][0-9]|2[0-4][0-9]|25[0-5])\.){3}([0-9]|[1-9][0-9]|1[0-9][0-9]|2[0-4][0-9]|25[0-5]){1}(\/([0-9]|[1-2][0-9]|3[0-2]))?$
        ConstraintDescription: must be a valid CIDR block format.
        Description: The CIDR block for the new VPC.
    PublicSubnet1Cidr:
        Type: String
        Default: 10.0.0.0/24
        AllowedPattern: >-
            ^(([0-9]|[1-9][0-9]|1[0-9][0-9]|2[0-4][0-9]|25[0-5])\.){3}([0-9]|[1-9][0-9]|1[0-9][0-9]|2[0-4][0-9]|25[0-5]){1}(\/([0-9]|[1-2][0-9]|3[0-2]))?$
        ConstraintDescription: must be a valid CIDR block format.
        Description: >-
            The CIDR block for the public facing subnet located in Availability
            Zone 1.
    PublicSubnet2Cidr:
        Type: String
        Default: 10.0.2.0/24
        AllowedPattern: >-
            ^(([0-9]|[1-9][0-9]|1[0-9][0-9]|2[0-4][0-9]|25[0-5])\.){3}([0-9]|[1-9][0-9]|1[0-9][0-9]|2[0-4][0-9]|25[0-5]){1}(\/([0-9]|[1-2][0-9]|3[0-2]))?$
        ConstraintDescription: must be a valid CIDR block format.
        Description: >-
            The CIDR block for the public facing subnet located in Availability
            Zone 2.
    DeployPrivateSubnet1:
        Type: String
        Default: 'yes'
        AllowedValues:
            - 'yes'
            - 'no'
        ConstraintDescription: must choose from the provided options.
        Description: Will deploy the private subnet 1.
    PrivateSubnet1Cidr:
        Type: String
        Default: 10.0.1.0/24
        AllowedPattern: >-
            ^$|^(([0-9]|[1-9][0-9]|1[0-9][0-9]|2[0-4][0-9]|25[0-5])\.){3}([0-9]|[1-9][0-9]|1[0-9][0-9]|2[0-4][0-9]|25[0-5]){1}(\/([0-9]|[1-2][0-9]|3[0-2]))?$
        ConstraintDescription: must be a valid CIDR block format.
        Description: >-
            The CIDR block for the private subnet located in Availability Zone 1
            where it is protected by the FortiGates in public subnet in the same
            AZ.
    DeployPrivateSubnet2:
        Type: String
        Default: 'yes'
        AllowedValues:
            - 'yes'
            - 'no'
        ConstraintDescription: must choose from the provided options.
        Description: Will deploy the private subnet 2.
    PrivateSubnet2Cidr:
        Type: String
        Default: 10.0.3.0/24
        AllowedPattern: >-
            ^$|^(([0-9]|[1-9][0-9]|1[0-9][0-9]|2[0-4][0-9]|25[0-5])\.){3}([0-9]|[1-9][0-9]|1[0-9][0-9]|2[0-4][0-9]|25[0-5]){1}(\/([0-9]|[1-2][0-9]|3[0-2]))?$
        ConstraintDescription: must be a valid CIDR block format.
        Description: >-
            The CIDR block for the private subnet located in Availability Zone 1
            where it is protected by the FortiGates in public subnet in the same
            AZ.
    GWLBSubnet1Cidr:
        Type: String
        Default: 10.0.4.0/24
        AllowedPattern: >-
            ^$|^(([0-9]|[1-9][0-9]|1[0-9][0-9]|2[0-4][0-9]|25[0-5])\.){3}([0-9]|[1-9][0-9]|1[0-9][0-9]|2[0-4][0-9]|25[0-5]){1}(\/([0-9]|[1-2][0-9]|3[0-2]))?$
        ConstraintDescription: must be a valid CIDR block format.
        Description: >-
            The CIDR block for the GWLBe subnet located in Availability Zone 1.
    GWLBSubnet2Cidr:
        Type: String
        Default: 10.0.5.0/24
        AllowedPattern: >-
            ^$|^(([0-9]|[1-9][0-9]|1[0-9][0-9]|2[0-4][0-9]|25[0-5])\.){3}([0-9]|[1-9][0-9]|1[0-9][0-9]|2[0-4][0-9]|25[0-5]){1}(\/([0-9]|[1-2][0-9]|3[0-2]))?$
        ConstraintDescription: must be a valid CIDR block format.
        Description: >-
            The CIDR block for the GWLBe subnet located in Availability Zone 2.
    PairWithPrivateSubnet:
        Type: String
        Default: 'no'
        AllowedValues:
            - 'yes'
            - 'no'
        ConstraintDescription: must choose from the provided options.
        Description: >-
            Create one private subnet to pair with the public subnet in the same
            AZ or not.
    ResourceTagPrefix:
        Type: String
        AllowedPattern: '[0-9a-zA-Z@.#-]+'
        MaxLength: 64
        ConstraintDescription: >-
            Resource tag prefix can include numbers, lowercase letters,
            uppercase letters, ampersat(@) , hyphens (-), period (.), and hash
            (#). Max length is 64.
        Description: >-
            A prefix for tag key ResourceGroup on all resources. It's also used
            as the name prefix of all applicable resources. Can only contain
            numbers, lowercase letters, uppercase letters, ampersat(@) , hyphens
            (-), period (.), and hash (#). Max length is 64.
##SPOKE1###
    Spoke1VpcCidr:
        Type: String
        Default: 10.1.0.0/16
        AllowedPattern: >-
            ^(([0-9]|[1-9][0-9]|1[0-9][0-9]|2[0-4][0-9]|25[0-5])\.){3}([0-9]|[1-9][0-9]|1[0-9][0-9]|2[0-4][0-9]|25[0-5]){1}(\/([0-9]|[1-2][0-9]|3[0-2]))?$
        ConstraintDescription: must be a valid CIDR block format.
        Description: The CIDR block for the new Spoke1 VPC.
    Spoke1PublicSubnet1Cidr:
        Type: String
        Default: 10.1.0.0/24
        AllowedPattern: >-
            ^(([0-9]|[1-9][0-9]|1[0-9][0-9]|2[0-4][0-9]|25[0-5])\.){3}([0-9]|[1-9][0-9]|1[0-9][0-9]|2[0-4][0-9]|25[0-5]){1}(\/([0-9]|[1-2][0-9]|3[0-2]))?$
        ConstraintDescription: must be a valid CIDR block format.
        Description: >-
            The CIDR block for the Spoke1 public facing subnet located in Availability
            Zone 1.
    Spoke1PublicSubnet2Cidr:
        Type: String
        Default: 10.1.2.0/24
        AllowedPattern: >-
            ^(([0-9]|[1-9][0-9]|1[0-9][0-9]|2[0-4][0-9]|25[0-5])\.){3}([0-9]|[1-9][0-9]|1[0-9][0-9]|2[0-4][0-9]|25[0-5]){1}(\/([0-9]|[1-2][0-9]|3[0-2]))?$
        ConstraintDescription: must be a valid CIDR block format.
        Description: >-
            The CIDR block for the Spoke1 public facing subnet located in Availability
            Zone 2.
    Spoke1DeployPrivateSubnet1:
        Type: String
        Default: 'yes'
        AllowedValues:
            - 'yes'
            - 'no'
        ConstraintDescription: must choose from the provided options.
        Description: Will deploy the private subnet 1.
    Spoke1PrivateSubnet1Cidr:
        Type: String
        Default: 10.1.1.0/24
        AllowedPattern: >-
            ^$|^(([0-9]|[1-9][0-9]|1[0-9][0-9]|2[0-4][0-9]|25[0-5])\.){3}([0-9]|[1-9][0-9]|1[0-9][0-9]|2[0-4][0-9]|25[0-5]){1}(\/([0-9]|[1-2][0-9]|3[0-2]))?$
        ConstraintDescription: must be a valid CIDR block format.
        Description: >-
            The CIDR block for the Spoke1 private subnet located in Availability Zone 1
            where it is protected by the FortiGates in public subnet in the same
            AZ.
    Spoke1DeployPrivateSubnet2:
        Type: String
        Default: 'yes'
        AllowedValues:
            - 'yes'
            - 'no'
        ConstraintDescription: must choose from the provided options.
        Description: Will deploy the private subnet 2.
    Spoke1PrivateSubnet2Cidr:
        Type: String
        Default: 10.1.3.0/24
        AllowedPattern: >-
            ^$|^(([0-9]|[1-9][0-9]|1[0-9][0-9]|2[0-4][0-9]|25[0-5])\.){3}([0-9]|[1-9][0-9]|1[0-9][0-9]|2[0-4][0-9]|25[0-5]){1}(\/([0-9]|[1-2][0-9]|3[0-2]))?$
        ConstraintDescription: must be a valid CIDR block format.
        Description: >-
            The CIDR block for the Spoke1 private subnet located in Availability Zone 1
            where it is protected by the FortiGates in public subnet in the same
            AZ.
    Spoke1GWLBSubnet1Cidr:
        Type: String
        Default: 10.1.4.0/24
        AllowedPattern: >-
            ^$|^(([0-9]|[1-9][0-9]|1[0-9][0-9]|2[0-4][0-9]|25[0-5])\.){3}([0-9]|[1-9][0-9]|1[0-9][0-9]|2[0-4][0-9]|25[0-5]){1}(\/([0-9]|[1-2][0-9]|3[0-2]))?$
        ConstraintDescription: must be a valid CIDR block format.
        Description: >-
            The CIDR block for the Spoke1 GWLBe subnet located in Availability Zone 1.
    Spoke1GWLBSubnet2Cidr:
        Type: String
        Default: 10.1.5.0/24
        AllowedPattern: >-
            ^$|^(([0-9]|[1-9][0-9]|1[0-9][0-9]|2[0-4][0-9]|25[0-5])\.){3}([0-9]|[1-9][0-9]|1[0-9][0-9]|2[0-4][0-9]|25[0-5]){1}(\/([0-9]|[1-2][0-9]|3[0-2]))?$
        ConstraintDescription: must be a valid CIDR block format.
        Description: >-
            The CIDR block for the Spoke1 GWLBe subnet located in Availability Zone 2.
    Spoke1PairWithPrivateSubnet:
        Type: String
        Default: 'no'
        AllowedValues:
            - 'yes'
            - 'no'
        ConstraintDescription: must choose from the provided options.
        Description: >-
            Create one private subnet to pair with the public subnet in the same
            AZ or not.
Conditions:
    NeedPairedPrivateSubnet: !Not
        - !Equals
          - !Ref PairWithPrivateSubnet
          - 'no'
    IfDeployPrivateSubnet1: !Equals
        - !Ref DeployPrivateSubnet1
        - 'yes'
    IfDeployPrivateSubnet2: !Equals
        - !Ref DeployPrivateSubnet2
        - 'yes'
    IfDeployPrivateRouteTable: !Or
        - !Equals
          - !Ref DeployPrivateSubnet1
          - 'yes'
        - !Equals
          - !Ref DeployPrivateSubnet2
          - 'yes'
    IfInUSGovCloud: !Or
        - !Equals
          - !Ref 'AWS::Region'
          - us-gov-east-1
        - !Equals
          - !Ref 'AWS::Region'
          - us-gov-west-1
Resources:
    FgtAsgVpc:
        Type: 'AWS::EC2::VPC'
        Properties:
            CidrBlock: !Ref VpcCidr
            InstanceTenancy: default
            EnableDnsSupport: 'true'
            EnableDnsHostnames: 'true'
            Tags:
                - Key: Name
                  Value: !Join
                      - '-'
                      - - !Ref ResourceTagPrefix
                        - fortigate-autoscale-vpc
                - Key: ResourceGroup
                  Value: !Ref ResourceTagPrefix
    PublicSubnet1:
        Type: 'AWS::EC2::Subnet'
        Properties:
            MapPublicIpOnLaunch: 'true'
            CidrBlock: !Ref PublicSubnet1Cidr
            AvailabilityZone: !Select
                - 0
                - !Ref AvailabilityZones
            VpcId: !Ref FgtAsgVpc
            Tags:
                - Key: Name
                  Value: !Join
                      - '-'
                      - - !Ref ResourceTagPrefix
                        - fortigate-autoscale-vpc-public-subnet#1
                - Key: ResourceGroup
                  Value: !Ref ResourceTagPrefix
    PublicSubnet2:
        Type: 'AWS::EC2::Subnet'
        Properties:
            MapPublicIpOnLaunch: 'true'
            CidrBlock: !Ref PublicSubnet2Cidr
            AvailabilityZone: !Select
                - 1
                - !Ref AvailabilityZones
            VpcId: !Ref FgtAsgVpc
            Tags:
                - Key: Name
                  Value: !Join
                      - '-'
                      - - !Ref ResourceTagPrefix
                        - fortigate-autoscale-vpc-public-subnet#2
                - Key: ResourceGroup
                  Value: !Ref ResourceTagPrefix
    GWLBSubnet1:
        Type: 'AWS::EC2::Subnet'
        Properties:
            CidrBlock: !Ref GWLBSubnet1Cidr
            AvailabilityZone: !Select
                - 0
                - !Ref AvailabilityZones
            VpcId: !Ref FgtAsgVpc
            Tags:
                - Key: Name
                  Value: !Join
                      - '-'
                      - - !Ref ResourceTagPrefix
                        - fortigate-autoscale-vpc-gwlb-subnet#1
                - Key: ResourceGroup
                  Value: !Ref ResourceTagPrefix
    GWLBSubnet2:
        Type: 'AWS::EC2::Subnet'
        Properties:
            CidrBlock: !Ref GWLBSubnet2Cidr
            AvailabilityZone: !Select
                - 1
                - !Ref AvailabilityZones
            VpcId: !Ref FgtAsgVpc
            Tags:
                - Key: Name
                  Value: !Join
                      - '-'
                      - - !Ref ResourceTagPrefix
                        - fortigate-autoscale-vpc-gwlb-subnet#2
                - Key: ResourceGroup
                  Value: !Ref ResourceTagPrefix
    FgtDhcpOptions:
        Type: 'AWS::EC2::DHCPOptions'
        Properties:
            DomainName: ca-central-1.compute.internal
            DomainNameServers:
                - AmazonProvidedDNS
    FgtDhcpOptionsAssoc:
        Type: 'AWS::EC2::VPCDHCPOptionsAssociation'
        Properties:
            VpcId: !Ref FgtAsgVpc
            DhcpOptionsId: !Ref FgtDhcpOptions
    FgtInternetGateway:
        Type: 'AWS::EC2::InternetGateway'
        Properties: {}
    FgtIgwAttachment:
        Type: 'AWS::EC2::VPCGatewayAttachment'
        Properties:
            VpcId: !Ref FgtAsgVpc
            InternetGatewayId: !Ref FgtInternetGateway
    FgtPublicSubnetAcl:
        Type: 'AWS::EC2::NetworkAcl'
        Properties:
            VpcId: !Ref FgtAsgVpc
    FgtPublicSubnet1AclEntry:
        Type: 'AWS::EC2::NetworkAclEntry'
        Properties:
            CidrBlock: 0.0.0.0/0
            Egress: 'true'
            Protocol: '-1'
            RuleAction: allow
            RuleNumber: '100'
            NetworkAclId: !Ref FgtPublicSubnetAcl
        DependsOn:
            - FgtPublicSubnetAcl
    FgtPublicSubnet2AclEntry:
        Type: 'AWS::EC2::NetworkAclEntry'
        Properties:
            CidrBlock: 0.0.0.0/0
            Protocol: '-1'
            RuleAction: allow
            RuleNumber: '100'
            NetworkAclId: !Ref FgtPublicSubnetAcl
        DependsOn:
            - FgtPublicSubnetAcl
    FgtPublicSubnet1AclAssoc:
        Type: 'AWS::EC2::SubnetNetworkAclAssociation'
        Properties:
            NetworkAclId: !Ref FgtPublicSubnetAcl
            SubnetId: !Ref PublicSubnet1
        DependsOn:
            - FgtPublicSubnetAcl
            - PublicSubnet1
    FgtPublicSubnet2AclAssoc:
        Type: 'AWS::EC2::SubnetNetworkAclAssociation'
        Properties:
            NetworkAclId: !Ref FgtPublicSubnetAcl
            SubnetId: !Ref PublicSubnet2
        DependsOn:
            - FgtPublicSubnetAcl
            - PublicSubnet2
    FgtPublicSubnetRouteTable:
        Type: 'AWS::EC2::RouteTable'
        Properties:
            VpcId: !Ref FgtAsgVpc
            Tags:
                - Key: Name
                  Value: !Join
                      - '-'
                      - - !Ref ResourceTagPrefix
                        - fortigate-autoscale-vpc-public-route-table
                - Key: ResourceGroup
                  Value: !Ref ResourceTagPrefix
    FgtPublicSubnet1RouteTableAssoc:
        Type: 'AWS::EC2::SubnetRouteTableAssociation'
        Properties:
            RouteTableId: !Ref FgtPublicSubnetRouteTable
            SubnetId: !Ref PublicSubnet1
    FgtPublicSubnet2RouteTableAssoc:
        Type: 'AWS::EC2::SubnetRouteTableAssociation'
        Properties:
            RouteTableId: !Ref FgtPublicSubnetRouteTable
            SubnetId: !Ref PublicSubnet2
    FgtPublicSubnetRoute1:
        Type: 'AWS::EC2::Route'
        Properties:
            DestinationCidrBlock: 0.0.0.0/0
            RouteTableId: !Ref FgtPublicSubnetRouteTable
            GatewayId: !Ref FgtInternetGateway
        DependsOn:
#            - FgtIgwAttachment
            - FgtInternetGateway
    PrivateSubnet1:
        Type: 'AWS::EC2::Subnet'
        Condition: IfDeployPrivateSubnet1
        Properties:
            CidrBlock: !Ref PrivateSubnet1Cidr
            AvailabilityZone: !Select
                - 0
                - !Ref AvailabilityZones
            VpcId: !Ref FgtAsgVpc
            Tags:
                - Key: Name
                  Value: !Join
                      - '-'
                      - - !Ref ResourceTagPrefix
                        - fortigate-autoscale-vpc-private-subnet#1
                - Key: ResourceGroup
                  Value: !Ref ResourceTagPrefix
    PrivateSubnet2:
        Type: 'AWS::EC2::Subnet'
        Condition: IfDeployPrivateSubnet2
        Properties:
            CidrBlock: !Ref PrivateSubnet2Cidr
            AvailabilityZone: !Select
                - 1
                - !Ref AvailabilityZones
            VpcId: !Ref FgtAsgVpc
            Tags:
                - Key: Name
                  Value: !Join
                      - '-'
                      - - !Ref ResourceTagPrefix
                        - fortigate-autoscale-vpc-private-subnet#2
                - Key: ResourceGroup
                  Value: !Ref ResourceTagPrefix
    GWLBSubnet1:
        Type: 'AWS::EC2::Subnet'
 #       Condition: IfDeployPrivateSubnet2
        Properties:
            CidrBlock: !Ref GWLBSubnet1Cidr
            AvailabilityZone: !Select
                - 0
                - !Ref AvailabilityZones
            VpcId: !Ref FgtAsgVpc
            Tags:
                - Key: Name
                  Value: !Join
                      - '-'
                      - - !Ref ResourceTagPrefix
                        - fortigate-autoscale-vpc-gwlb-subnet#1
                - Key: ResourceGroup
                  Value: !Ref ResourceTagPrefix
    GWLBSubnet2:
        Type: 'AWS::EC2::Subnet'
 #       Condition: IfDeployPrivateSubnet2
        Properties:
            CidrBlock: !Ref GWLBSubnet2Cidr
            AvailabilityZone: !Select
                - 1
                - !Ref AvailabilityZones
            VpcId: !Ref FgtAsgVpc
            Tags:
                - Key: Name
                  Value: !Join
                      - '-'
                      - - !Ref ResourceTagPrefix
                        - fortigate-autoscale-vpc-gwlb-subnet#2
                - Key: ResourceGroup
                  Value: !Ref ResourceTagPrefix

###RTB FGT Private Subnet###
    FgtPrivateSubnetRouteTable:
        Type: 'AWS::EC2::RouteTable'
        Condition: IfDeployPrivateRouteTable
        Properties:
            VpcId: !Ref FgtAsgVpc
            Tags:
                - Key: Name
                  Value: !Join
                      - '-'
                      - - !Ref ResourceTagPrefix
                        - fortigate-autoscale-vpc-private-route-table
                - Key: ResourceGroup
                  Value: !Ref ResourceTagPrefix
    FgtPrivateSubnet1RouteTableAssoc:
        Type: 'AWS::EC2::SubnetRouteTableAssociation'
        Condition: IfDeployPrivateSubnet1
        Properties:
            RouteTableId: !Ref FgtPrivateSubnetRouteTable
            SubnetId: !Ref PrivateSubnet1
    FgtPrivateSubnet2RouteTableAssoc:
        Type: 'AWS::EC2::SubnetRouteTableAssociation'
        Condition: IfDeployPrivateSubnet2
        Properties:
            RouteTableId: !Ref FgtPrivateSubnetRouteTable
            SubnetId: !Ref PrivateSubnet2
###END RTB FGT Private Subnet###

###RTB FGT GWLB Subnet###
    FgtGWLBSubnetRouteTable:
        Type: 'AWS::EC2::RouteTable'
#        Condition: IfDeployGWLBRouteTable
        Properties:
            VpcId: !Ref FgtAsgVpc
            Tags:
                - Key: Name
                  Value: !Join
                      - '-'
                      - - !Ref ResourceTagPrefix
                        - fortigate-autoscale-vpc-gwlb-route-table
                - Key: ResourceGroup
                  Value: !Ref ResourceTagPrefix
    FgtGWLBubnet1RouteTableAssoc:
        Type: 'AWS::EC2::SubnetRouteTableAssociation'
#        Condition: IfDeployGWLBSubnet1
        Properties:
            RouteTableId: !Ref FgtGWLBSubnetRouteTable
            SubnetId: !Ref GWLBSubnet1
    FgtGWLBSubnet2RouteTableAssoc:
        Type: 'AWS::EC2::SubnetRouteTableAssociation'
#        Condition: IfDeployGWLBSubnet2
        Properties:
            RouteTableId: !Ref FgtGWLBSubnetRouteTable
            SubnetId: !Ref GWLBSubnet2
###END RTB FGT GWLB Subnet###






####SPOKE1####
    Spoke1Vpc: 
        Type: 'AWS::EC2::VPC'
        Properties:
            CidrBlock: !Ref Spoke1VpcCidr
            InstanceTenancy: default
            EnableDnsSupport: 'true'
            EnableDnsHostnames: 'true'
            Tags:
                - Key: Name
                  Value: !Join
                      - '-'
                      - - !Ref ResourceTagPrefix
                        - spoke1-vpc
                - Key: ResourceGroup
                  Value: !Ref ResourceTagPrefix
    Spoke1PublicSubnet1:
        Type: 'AWS::EC2::Subnet'
        Properties:
            CidrBlock: !Ref Spoke1PublicSubnet1Cidr
            AvailabilityZone: !Select
                - 0
                - !Ref AvailabilityZones
            VpcId: !Ref Spoke1Vpc
            Tags:
                - Key: Name
                  Value: !Join
                      - '-'
                      - - !Ref ResourceTagPrefix
                        - spoke1-vpc-public-subnet#1
                - Key: ResourceGroup
                  Value: !Ref ResourceTagPrefix
    Spoke1PublicSubnet2:
        Type: 'AWS::EC2::Subnet'
        Properties:
            CidrBlock: !Ref Spoke1PublicSubnet2Cidr
            AvailabilityZone: !Select
                - 1
                - !Ref AvailabilityZones
            VpcId: !Ref Spoke1Vpc
            Tags:
                - Key: Name
                  Value: !Join
                      - '-'
                      - - !Ref ResourceTagPrefix
                        - spoke1-vpc-public-subnet#2
                - Key: ResourceGroup
                  Value: !Ref ResourceTagPrefix
    Spoke1GWLBSubnet1:
        Type: 'AWS::EC2::Subnet'
        Properties:
            CidrBlock: !Ref Spoke1GWLBSubnet1Cidr
            AvailabilityZone: !Select
                - 0
                - !Ref AvailabilityZones
            VpcId: !Ref Spoke1Vpc
            Tags:
                - Key: Name
                  Value: !Join
                      - '-'
                      - - !Ref ResourceTagPrefix
                        - spoke1-vpc-gwlb-subnet#1
                - Key: ResourceGroup
                  Value: !Ref ResourceTagPrefix
    Spoke1GWLBSubnet2:
        Type: 'AWS::EC2::Subnet'
        Properties:
            CidrBlock: !Ref Spoke1GWLBSubnet2Cidr
            AvailabilityZone: !Select
                - 1
                - !Ref AvailabilityZones
            VpcId: !Ref Spoke1Vpc
            Tags:
                - Key: Name
                  Value: !Join
                      - '-'
                      - - !Ref ResourceTagPrefix
                        - spoke1-vpc-gwlb-subnet#2
                - Key: ResourceGroup
                  Value: !Ref ResourceTagPrefix
#    FgtDhcpOptions:
#        Type: 'AWS::EC2::DHCPOptions'
#        Properties:
#            DomainName: ca-central-1.compute.internal
#            DomainNameServers:
#                - AmazonProvidedDNS
#    FgtDhcpOptionsAssoc:
#        Type: 'AWS::EC2::VPCDHCPOptionsAssociation'
#        Properties:
#            VpcId: !Ref Spoke1Vpc
#            DhcpOptionsId: !Ref FgtDhcpOptions
    Spoke1InternetGateway:
        Type: 'AWS::EC2::InternetGateway'
        Properties: {}
    Spoke1IgwAttachment:
        Type: 'AWS::EC2::VPCGatewayAttachment'
        Properties:
            VpcId: !Ref Spoke1Vpc
            InternetGatewayId: !Ref Spoke1InternetGateway
    Spoke1PublicSubnetAcl:
        Type: 'AWS::EC2::NetworkAcl'
        Properties:
            VpcId: !Ref Spoke1Vpc
    Spoke1PublicSubnet1AclEntry:
        Type: 'AWS::EC2::NetworkAclEntry'
        Properties:
            CidrBlock: 0.0.0.0/0
            Egress: 'true'
            Protocol: '-1'
            RuleAction: allow
            RuleNumber: '100'
            NetworkAclId: !Ref Spoke1PublicSubnetAcl
        DependsOn:
            - Spoke1PublicSubnetAcl
    Spoke1PublicSubnet2AclEntry:
        Type: 'AWS::EC2::NetworkAclEntry'
        Properties:
            CidrBlock: 0.0.0.0/0
            Protocol: '-1'
            RuleAction: allow
            RuleNumber: '100'
            NetworkAclId: !Ref Spoke1PublicSubnetAcl
        DependsOn:
            - Spoke1PublicSubnetAcl
    Spoke1PublicSubnet1AclAssoc:
        Type: 'AWS::EC2::SubnetNetworkAclAssociation'
        Properties:
            NetworkAclId: !Ref Spoke1PublicSubnetAcl
            SubnetId: !Ref Spoke1PublicSubnet1
        DependsOn:
            - Spoke1PublicSubnetAcl
            - Spoke1PublicSubnet1
    Spoke1PublicSubnet2AclAssoc:
        Type: 'AWS::EC2::SubnetNetworkAclAssociation'
        Properties:
            NetworkAclId: !Ref Spoke1PublicSubnetAcl
            SubnetId: !Ref Spoke1PublicSubnet2
        DependsOn:
            - Spoke1PublicSubnetAcl
            - Spoke1PublicSubnet2

#### RTB SPOKE1 Public Subnets ####
    Spoke1PublicSubnetRouteTable:
        Type: 'AWS::EC2::RouteTable'
        Properties:
            VpcId: !Ref Spoke1Vpc
            Tags:
                - Key: Name
                  Value: !Join
                      - '-'
                      - - !Ref ResourceTagPrefix
                        - spoke1-vpc-public-route-table
                - Key: ResourceGroup
                  Value: !Ref ResourceTagPrefix
    Spoke1PublicSubnet1RouteTableAssoc:
        Type: 'AWS::EC2::SubnetRouteTableAssociation'
        Properties:
            RouteTableId: !Ref Spoke1PublicSubnetRouteTable
            SubnetId: !Ref Spoke1PublicSubnet1
    Spoke1PublicSubnet2RouteTableAssoc:
        Type: 'AWS::EC2::SubnetRouteTableAssociation'
        Properties:
            RouteTableId: !Ref Spoke1PublicSubnetRouteTable
            SubnetId: !Ref Spoke1PublicSubnet2
    Spoke1PublicSubnetRoute1:
        Type: 'AWS::EC2::Route'
        Properties:
            DestinationCidrBlock: 0.0.0.0/0
            RouteTableId: !Ref Spoke1PublicSubnetRouteTable
            VpcEndpointId: !Ref Endpoint1SecSpoke
#            GatewayId: !Ref Spoke1InternetGateway
#        DependsOn:
#            - Spoke1IgwAttachment

####END RTB SPOKE1 Private Subnets ####
    Spoke1PrivateSubnet1:
        Type: 'AWS::EC2::Subnet'
##        Condition: IfDeployPrivateSubnet1
        Properties:
            CidrBlock: !Ref Spoke1PrivateSubnet1Cidr
            AvailabilityZone: !Select
                - 0
                - !Ref AvailabilityZones
            VpcId: !Ref Spoke1Vpc
            Tags:
                - Key: Name
                  Value: !Join
                      - '-'
                      - - !Ref ResourceTagPrefix
                        - spoke1-vpc-private-subnet#1
                - Key: ResourceGroup
                  Value: !Ref ResourceTagPrefix
    Spoke1PrivateSubnet2:
        Type: 'AWS::EC2::Subnet'
##        Condition: IfDeployPrivateSubnet2
        Properties:
            CidrBlock: !Ref Spoke1PrivateSubnet2Cidr
            AvailabilityZone: !Select
                - 1
                - !Ref AvailabilityZones
            VpcId: !Ref Spoke1Vpc
            Tags:
                - Key: Name
                  Value: !Join
                      - '-'
                      - - !Ref ResourceTagPrefix
                        - spoke1-vpc-private-subnet#2
                - Key: ResourceGroup
                  Value: !Ref ResourceTagPrefix
    Spoke1PrivateSubnetRouteTable:
        Type: 'AWS::EC2::RouteTable'
#        Condition: IfDeployPrivateRouteTable
        Properties:
            VpcId: !Ref Spoke1Vpc
            Tags:
                - Key: Name
                  Value: !Join
                      - '-'
                      - - !Ref ResourceTagPrefix
                        - spoke1-vpc-private-route-table
                - Key: ResourceGroup
                  Value: !Ref ResourceTagPrefix
    Spoke1PrivateSubnet1RouteTableAssoc:
        Type: 'AWS::EC2::SubnetRouteTableAssociation'
 #       Condition: IfDeployPrivateSubnet1
        Properties:
            RouteTableId: !Ref Spoke1PrivateSubnetRouteTable
            SubnetId: !Ref Spoke1PrivateSubnet1
    Spoke1PrivateSubnet2RouteTableAssoc:
        Type: 'AWS::EC2::SubnetRouteTableAssociation'
#        Condition: IfDeployPrivateSubnet2
        Properties:
            RouteTableId: !Ref Spoke1PrivateSubnetRouteTable
            SubnetId: !Ref Spoke1PrivateSubnet2
    Spoke1PrivateSubnetRoute1:
        Type: 'AWS::EC2::Route'
        Properties:
            DestinationCidrBlock: 0.0.0.0/0
            RouteTableId: !Ref Spoke1PrivateSubnetRouteTable
            VpcEndpointId: !Ref Endpoint1SecSpoke

#Spoke1GWLBSubnet1
    Spoke1GWLBSubnetRouteTable:
        Type: 'AWS::EC2::RouteTable'
#        Condition: IfDeployPrivateRouteTable
        Properties:
            VpcId: !Ref Spoke1Vpc
            Tags:
                - Key: Name
                  Value: !Join
                      - '-'
                      - - !Ref ResourceTagPrefix
                        - spoke1-vpc-gwlb-route-table
                - Key: ResourceGroup
                  Value: !Ref ResourceTagPrefix
    Spoke1GWLBSubnet1RouteTableAssoc:
        Type: 'AWS::EC2::SubnetRouteTableAssociation'
 #       Condition: IfDeployGWLBSubnet1
        Properties:
            RouteTableId: !Ref Spoke1GWLBSubnetRouteTable
            SubnetId: !Ref Spoke1GWLBSubnet1
    Spoke1GWLBSubnet2RouteTableAssoc:
        Type: 'AWS::EC2::SubnetRouteTableAssociation'
#        Condition: IfDeployGWLBSubnet2
        Properties:
            RouteTableId: !Ref Spoke1GWLBSubnetRouteTable
            SubnetId: !Ref Spoke1GWLBSubnet2
    Spoke1GWLBSubnetRoute1:
        Type: 'AWS::EC2::Route'
        Properties:
            DestinationCidrBlock: 0.0.0.0/0
            RouteTableId: !Ref Spoke1GWLBSubnetRouteTable
            GatewayId: !Ref Spoke1InternetGateway


#Spoke1IGWRouteTable
    Spoke1IGWRouteTable:
        Type: 'AWS::EC2::RouteTable'
#        Condition: IfDeployPrivateRouteTable
        Properties:
            VpcId: !Ref Spoke1Vpc
            Tags:
                - Key: Name
                  Value: !Join
                      - '-'
                      - - !Ref ResourceTagPrefix
                        - spoke1-vpc-igw-route-table
                - Key: ResourceGroup
                  Value: !Ref ResourceTagPrefix
    Spoke1IGWRouteTableAssoc:
        Type: 'AWS::EC2::GatewayRouteTableAssociation'
 #       Condition: IfDeployGWLBSubnet1
        Properties:
            RouteTableId: !Ref Spoke1IGWRouteTable
            GatewayId: !Ref Spoke1InternetGateway

    Spoke1IGWRoute1:
        Type: 'AWS::EC2::Route'
        Properties:
            DestinationCidrBlock: !Ref Spoke1PublicSubnet1Cidr
            RouteTableId: !Ref Spoke1IGWRouteTable
            VpcEndpointId: !Ref Endpoint1SecSpoke

    Spoke1IGWRoute2:
        Type: 'AWS::EC2::Route'
        Properties:
            DestinationCidrBlock: !Ref Spoke1PublicSubnet2Cidr
            RouteTableId: !Ref Spoke1IGWRouteTable
            VpcEndpointId: !Ref Endpoint1SecSpoke

    Spoke1IGWRoute3:
        Type: 'AWS::EC2::Route'
        Properties:
            DestinationCidrBlock: !Ref Spoke1PrivateSubnet1Cidr
            RouteTableId: !Ref Spoke1IGWRouteTable
            VpcEndpointId: !Ref Endpoint1SecSpoke

    Spoke1IGWRoute4:
        Type: 'AWS::EC2::Route'
        Properties:
            DestinationCidrBlock: !Ref Spoke1PrivateSubnet2Cidr
            RouteTableId: !Ref Spoke1IGWRouteTable
            VpcEndpointId: !Ref Endpoint1SecSpoke




####END SPOKE1####

##08-22-2022
#### GWLB ####
    GatewayLoadBalancer:
        Type: AWS::ElasticLoadBalancingV2::LoadBalancer
        Properties:
            Name: GWLB-SEC
            Type: gateway
            LoadBalancerAttributes:
                - Key: load_balancing.cross_zone.enabled
                  Value: 'true'
            Subnets:
                - !Ref PrivateSubnet1
                - !Ref PrivateSubnet2

    TargetGroupGeneve:
        Type: AWS::ElasticLoadBalancingV2::TargetGroup
        Properties: 
            Name: GWLB-SEC
            VpcId: !Ref FgtAsgVpc
            TargetType: instance
            Port: 6081
            HealthCheckProtocol: TCP
            Protocol: GENEVE

    ListenerGWLB:
        Type: AWS::ElasticLoadBalancingV2::Listener
        Properties:
            DefaultActions:
                - Type: forward
                  TargetGroupArn: !Ref TargetGroupGeneve
            LoadBalancerArn: !Ref GatewayLoadBalancer

    
    # Creation of Endpoints and Endpoint Service

    EndpointService:
        Type: AWS::EC2::VPCEndpointService
        Properties: 
            AcceptanceRequired: false
            GatewayLoadBalancerArns: 
                - !Ref GatewayLoadBalancer

    EndpointSecGWLB1:
        Type: AWS::EC2::VPCEndpoint
        Properties:
            ServiceName: !Join [".", [com.amazonaws.vpce, !Ref AWS::Region, !Ref EndpointService]]
            VpcEndpointType: GatewayLoadBalancer
            SubnetIds:
              - !Ref GWLBSubnet1
            VpcId: !Ref FgtAsgVpc

    EndpointSecGWLB2:
        Type: AWS::EC2::VPCEndpoint
        Properties:
            ServiceName: !Join [".", [com.amazonaws.vpce, !Ref AWS::Region, !Ref EndpointService]]
            VpcEndpointType: GatewayLoadBalancer
            SubnetIds:
                - !Ref GWLBSubnet2
                #- !Ref PrivateSubnet2
            VpcId: !Ref FgtAsgVpc

#    EndpointLambda:
#        Type: AWS::EC2::VPCEndpoint
#        Properties:
#            ServiceName: !Join [".", [com.amazonaws, !Ref AWS::Region, execute-api]]
#            PrivateDnsEnabled: true
#            SecurityGroupIds: 
#                - !GetAtt SGSecurity.GroupId
#            SubnetIds: 
#                - !Ref SubnetSecPriv1
#                - !Ref SubnetSecPriv2
#            VpcEndpointType: Interface
#            VpcId: !Ref VPCSecurity

#### Change to Endpoint1SecSpoke
    Endpoint1SecSpoke:
        Type: AWS::EC2::VPCEndpoint
        Properties:
            ServiceName: !Join [".", [com.amazonaws.vpce, !Ref AWS::Region, !Ref EndpointService]]
            VpcEndpointType: GatewayLoadBalancer
            SubnetIds:
                - !Ref Spoke1GWLBSubnet1
            VpcId: !Ref Spoke1Vpc
####Change
    Endpoint2SecSpoke:
        Type: AWS::EC2::VPCEndpoint
        Properties:
            ServiceName: !Join [".", [com.amazonaws.vpce, !Ref AWS::Region, !Ref EndpointService]]
            VpcEndpointType: GatewayLoadBalancer
            SubnetIds:
                - !Ref Spoke1GWLBSubnet2
            VpcId: !Ref Spoke1Vpc

#### END GWLB ####






Outputs:
    VpcId:
        Description: VPC ID
        Value: !Ref FgtAsgVpc
    VpcCidr:
        Description: VPC CIDR
        Value: !Ref VpcCidr
    PublicSubnet1Id:
        Description: Public Subnet 1 ID
        Value: !Ref PublicSubnet1
    PublicSubnet2Id:
        Description: Public Subnet 2 ID
        Value: !Ref PublicSubnet2
    GWLBSubnet1Id:
        Description: GWLB Subnet 1 ID
        Value: !Ref GWLBSubnet1
    GWLBSubnet2Id:
        Description: GWLB Subnet 2 ID
        Value: !Ref GWLBSubnet2
    PublicSubnetRouteTableId:
        Description: Public Subnet Route Table ID
        Value: !Ref FgtPublicSubnetRouteTable
    PrivateSubnet1Id:
        Description: Private Subnet 1 ID
        Value: !If
            - IfDeployPrivateSubnet1
            - !Ref PrivateSubnet1
            - ''
    PrivateSubnet2Id:
        Description: Private Subnet 2 ID
        Value: !If
            - IfDeployPrivateSubnet2
            - !Ref PrivateSubnet2
            - ''
    PrivateSubnetRouteTableId:
        Description: Private subnet route table.
        Value: !If
            - IfDeployPrivateRouteTable
            - !Ref FgtPrivateSubnetRouteTable
            - ''
###SPOKE1###
    Spoke1VpcId:
        Description: SPOKE1 VPC ID
        Value: !Ref Spoke1Vpc
    Spoke1VpcCidr:
        Description: SPOKE1 VPC CIDR
        Value: !Ref Spoke1VpcCidr
    Spoke1PublicSubnet1Id:
        Description: Spoke1 Public Subnet 1 ID
        Value: !Ref Spoke1PublicSubnet1
    Spoke1PublicSubnet2Id:
        Description: Spoke1 Public Subnet 2 ID
        Value: !Ref Spoke1PublicSubnet2
    Spoke1GWLBSubnet1Id:
        Description: Spoke1 GWLB Subnet 1 ID
        Value: !Ref Spoke1GWLBSubnet1
    Spoke1GWLBSubnet2Id:
        Description: Spoke1 GWLB Subnet 2 ID
        Value: !Ref Spoke1GWLBSubnet2
    Spoke1PublicSubnetRouteTableId:
        Description: Spoke1 Public Subnet Route Table ID
        Value: !Ref Spoke1PublicSubnetRouteTable
    Spoke1PrivateSubnet1Id:
        Description: Spoke1 Private Subnet 1 ID
        Value: !Ref Spoke1PrivateSubnet1
    Spoke1PrivateSubnet2Id:
        Description: Private Subnet 2 ID
        Value: !Ref PrivateSubnet2
    Spoke1PrivateSubnetRouteTableId:
        Description: Spoke1 Private subnet route table.
        Value: !Ref Spoke1PrivateSubnetRouteTable
    TargetGroupGeneveId:
        Description: TargetGroupGeneve ID
        Value: !Ref TargetGroupGeneve
#    GWLBEndpointAZ1:
#        Description: IP for GWLB Endpoint AZ1
#        Value: EndpointSecGWLB1
#    GWLBEndpointAZ2:
#        Description: IP for GWLB Endpoint AZ2
#        Value: EndpointSecGWLB2